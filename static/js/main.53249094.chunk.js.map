{"version":3,"sources":["components/DownloadTableButton.jsx","components/QueryTable.jsx","tables.svg","views/CustomSQLQuery.jsx","components/DrawerList.jsx","utils/makeSvgIcon.jsx","icons/Seal.jsx","constants.js","utils/not.js","components/SchemeCheckboxList.jsx","utils/intersection.js","utils/union.js","utils/detailLink.js","utils/humanReadableSize.js","utils/queryAll.js","views/SchemeComparison.jsx","utils/queryAllAsArray.js","icons/Bottom.jsx","components/Comment.jsx","icons/Measure.jsx","components/PropItem.jsx","icons/Book.jsx","components/TextComment.jsx","utils/linkify.jsx","utils/romanCat.js","views/FlavorDetail.jsx","icons/Podium.jsx","views/SchemeDetail.jsx","icons/ExternalLink.jsx","components/SchemeList.jsx","views/SchemeOverview.jsx","views/SchemeDetailSwitch.jsx","res/menu-arrow.svg","views/Welcome.jsx","pqdb.svg","App.jsx","index.jsx"],"names":["options","startDownload","content","filename","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","removeChild","DownloadTableButton","props","useState","open","setOpen","anchorRef","React","useRef","handleClose","event","current","contains","target","Box","Button","variant","ref","onClick","prevOpen","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","map","option","index","MenuItem","queryResult","genCSV","columns","values","err","output","JSON","stringify","handleMenuItemClick","styledCells","a","b","withStyles","theme","cellBgColors","palette","mode","head","backgroundColor","TableCell","styleTableCell","sortedRows","array","orderBy","isAsc","indexedRows","row","sort","order","x","y","isValidElement","children","comparator","QueryTable","resultHash","this","md5","property","onChangeOrder","str","idx","headerSpans","length","reduce","prev","cur","concat","findIndex","e","formatFunctions","headers","Error","undefined","Typography","Grid","direction","alignItems","spacing","container","item","TableContainer","component","maxHeight","Table","stickyHeader","TableHead","TableRow","name","StyledTableCell","align","colSpan","column","headerModVal","top","TableSortLabel","active","handleRequestSort","createKey","TableBody","val","j","value","Component","defaultProps","AutoFocusTextField","inputRef","useEffect","timeout","setTimeout","focus","clearTimeout","TextField","DatabaseDiagram","imageSrc","diagramImage","square","magnifierSize","allowOverflow","CustomSQLQuery","db","params","qs","parse","history","location","search","sqlInput","query","state","error","queryProcessing","title","sqlQuery","setState","results","exec","push","pathname","p","label","multiline","fullWidth","margin","rows","rowsMax","helperText","toString","onChange","display","justifyContent","color","disabled","executeSQLQuery","Container","maxWidth","disableGutters","Accordion","AccordionSummary","expandIcon","AccordionDetails","newOrder","newOrderBy","DrawerList","views","List","Object","keys","key","ListItem","button","ListItemText","primary","secondary","description","routing","makeSvgIcon","code","forwardRef","SvgIcon","displayName","Seal","d","NIST_ROUNDS","none","short","long","SEC_NOTIONS","SCHEME_TYPES","enc","icon","EncryptionIcon","ctsig","ct_sig","encsign","enc_sign","decvrfy","dec_vrfy","sig","SealIcon","not","filter","indexOf","useStyles","makeStyles","root","minWidth","overflow","listItem","padding","SchemeCheckboxList","items","list","checkedList","checked","numberOfChecked","classes","Card","dense","className","newChecked","ListItemIcon","Checkbox","indeterminate","tabIndex","disableRipple","Divider","scheme","currentIndex","splice","detailLink","flavor","url","humanReadableSize","size","baseUnit","Number","isFinite","i","Math","floor","log","toFixed","queryAll","stmt","prepare","result","step","getAsObject","free","schemesListQueryDB","nistRound","nonNist","id_text","secLevelMarks","nistRoundMarks","getNistRoundLabel","v","find","entry","prepareParams","schemeType","securityLevel","securityQuantum","showColumns","includes","platformFilter","getFormatFunctions","Array","fill","forEach","col","endsWith","toLocaleString","SchemeComparison","platformFilterTimeout","fullSchemeLists","schemesList","defaultState","sliderValue","showRef","showNonNistSchemes","checkedSchemes","assign","paramState","updateResult","prevProps","prevState","resetChecked","updateSearchParams","change","slice","replaceAll","shift","getColumnNames","get","queryAllAsArray","res","Link","RouterLink","to","resetOrder","queryState","buildQuery","computeResult","createHeaderSections","replace","searchParam","isArray","searchParamStr","historyParams","window","replaceState","pushState","l","expandedQuery","expandQuery","ToggleButtonGroup","exclusive","_event","setFilterState","ToggleButton","my","mb","Tooltip","justify","xs","Slider","defaultValue","min","max","marks","track","onChangeCommitted","valueLabelDisplay","valueLabelFormat","FormControlLabel","control","defaultChecked","FormControl","filterValue","encodeURIComponent","Bottom","Comment","interactive","arrow","fontSize","cursor","Measure","stroke","strokeWidth","strokeLinecap","PropItem","Icon","role","Book","fillRule","TextComment","linkify","s","match","romanCat","nistCat","romans","isInteger","FlavorDetail","paramsets","implementations","links","sources","schemeId","flavorId","id","TypeIcon","ArrowBack","fontWeight","marginLeft","category","category_comment","stateful","stateful_comment","nist_round","nist_round_comment","comment","CategoryIcon","type_comment","SecurityIcon","security_notion","security_notion_comment","dh_ness","DiffieHellmanIcon","LinkIcon","SourceIcon","paramsetLinks","paramsetSources","security_level_nist_category","security_level_quantum","opacity","security_level_classical","security_level_comment","failure_probability","failure_probability_comment","BottomIcon","AutoModeIcon","number_of_operations","MeasureIcon","sizes_sk","sizes_pk","sizes_ct_sig","sizes_comment","implLinks","implSources","implHardware","implDependencies","implSideChannelGuarding","side_channel_guarding_branching","side_channel_guarding_timing","Boolean","sideChannelInfo","null","LanguageIcon","platform","ChipIcon","h","feature","CodeIcon","dependency","FortIcon","side_channel_guarding_branching_comment","side_channel_guarding_timing_comment","Podium","SchemeDetail","authors","problems","flavors","patentslink","exp","RegExp","patentString","patents","split","SaveIcon","PodiumIcon","EventIcon","year_paper","year_candidate","year_standardization","year_comment","accu","elem","trust_comment","marginBottom","problems_comment","assumption","PeopleIcon","website","PendingActionsIcon","ps","test","plUrl","f","flavorParamsets","flavorImplementations","ParamSetIcon","ExternalLink","MaybeTooltip","SchemeList","typeKey","paddingLeft","rel","lineHeight","SchemeOverview","SchemeDetailSwitch","exact","path","render","Welcome","position","left","transform","src","menuArrow","alt","gutterBottom","paragraph","pt","defaultTheme","createTheme","view","raw_sql","detail","comparison","Progress","CircularProgress","App","themeId","drawerOpen","unlisten","initSqlJs","then","SQL","loadDatabase","catch","listen","scrollTo","close","xhr","XMLHttpRequest","responseType","onload","uInt8Array","Uint8Array","response","Database","send","prototype","hasOwnProperty","call","StyledEngineProvider","injectFirst","ThemeProvider","components","MuiToggleButton","styleOverrides","action","CssBaseline","logo","width","height","IconButton","toggleTheme","Menu","Drawer","anchor","onClose","switchView","AppWithRouter","withRouter","ReactDOM","StrictMode","basename","getElementById"],"mappings":"s1BAqBMA,GAAU,CAAC,OAAQ,SAEzB,SAASC,GAAcC,EAASC,GAC9B,IAAMC,EAAUC,SAASC,cAAc,KACjCC,EAAO,IAAIC,KAAK,CAACN,GAAU,CAAEO,KAAM,6BACzCL,EAAQM,KAAOC,IAAIC,gBAAgBL,GACnCH,EAAQS,SAAWV,EACnBE,SAASS,KAAKC,YAAYX,GAC1BA,EAAQY,QACRX,SAASS,KAAKG,YAAYb,GAgEbc,OA7Df,SAA6BC,GAC3B,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAYC,IAAMC,OAAO,MAEzBC,EAAc,SAACC,GACfJ,EAAUK,SAAWL,EAAUK,QAAQC,SAASF,EAAMG,SAI1DR,GAAQ,IAmBV,OACE,gBAACS,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,IAAKX,EAAWY,QAlB1B,WACnBb,GAAQ,SAACc,GAAD,OAAeA,MAiBrB,6BACA,eAACC,GAAA,EAAD,CAAQhB,KAAMA,EAAMiB,SAAUf,EAAUK,QAASW,YAAU,EAACC,eAAa,EAAzE,SACG,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,eAACC,GAAA,EAAD,2BACMF,GADN,IAEEG,MAAO,CACLC,gBAA+B,WAAdH,EAAyB,aAAe,iBAH7D,SAME,eAACI,EAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAmBC,YAAatB,EAAhC,SACE,eAACuB,GAAA,EAAD,UACGjD,GAAQkD,KAAI,SAACC,EAAQC,GAAT,OACX,eAACC,GAAA,EAAD,CAEElB,QAAS,SAACR,GAAD,OA7BD,SAACA,EAAOyB,GAClC,IAAQE,EAAgBnC,EAAhBmC,YACM,IAAVF,EACFG,KAAO,CAACD,EAAYE,SAAd,mBAA0BF,EAAYG,UAAS,SAACC,EAAKC,GACzD1D,GAAc0D,EAAQ,eAEL,IAAVP,GACTnD,GAAc2D,KAAKC,UAAUP,EAAa,KAAM,GAAI,aAEtDhC,GAAQ,GAoB8BwC,CAAoBnC,EAAOyB,IAFjD,SAIGD,GAHIA,sBCf3B,IAAMY,GAAc,CAAC,EAAG,GAAGb,KAAI,SAACc,GAAD,MAAQ,CAAC,EAAG,GAAGd,KAAI,SAACe,GAAD,OAnBlD,SAAwBD,EAAGC,GACzB,OAAOC,aAAW,SAACC,GACjB,IAAMC,EAAuC,SAAvBD,EAAME,QAAQC,KAAmB,CACrD,CAAC,UAAW,WACZ,CAAC,UAAW,YACV,CACF,CAAC,UAAW,WACZ,CAAC,UAAW,YAEd,MAAO,CACLC,KAAM,CACJC,gBAAiBJ,EAAaJ,GAAGC,IAEnCnD,KAAM,CACJ0D,gBAAiBJ,EAAaJ,GAAGC,OAbhCC,CAgBJO,KAEoDC,CAAeV,EAAGC,SAgB3E,SAASU,GAAWC,EAAOC,EAASC,GAClC,IAAMC,EAAcH,EAAM1B,KAAI,SAAC8B,EAAK5B,GAAN,MAAgB,CAAC4B,EAAK5B,MACpD,OAAgB,OAAZyB,GACJE,EAAYE,MAAK,SAACjB,EAAGC,GACnB,IAAMiB,EAlBV,SAAoBlB,EAAGC,EAAGY,EAASC,GACjC,IAAIK,EAAInB,EAAEa,GACNO,EAAInB,EAAEY,GAGV,OAFIrD,IAAM6D,eAAeF,KAAIA,EAAIA,EAAEhE,MAAMmE,UACrC9D,IAAM6D,eAAeD,KAAIA,EAAIA,EAAEjE,MAAMmE,UACrCF,EAAID,EACCL,EAAQ,GAAK,EAElBM,EAAID,EACCL,GAAS,EAAI,EAEf,EAOSS,CAAWvB,EAAE,GAAIC,EAAE,GAAIY,EAASC,GAC9C,OAAc,IAAVI,EAAoBA,EACjBlB,EAAE,GAAKC,EAAE,MAJWc,E,IASzBS,G,kDACJ,WAAYrE,GAAQ,IAAD,8BACjB,cAAMA,IACDsE,WAAa,OAFD,E,sDAKnB,WACE,IAAQnC,EAAgBoC,KAAKvE,MAArBmC,YACRoC,KAAKD,WAAcnC,EAAeqC,IAAI/B,KAAKC,UAAUP,IAAgB,S,+BAGvE,SAAkBsC,GAChB,MAA0CF,KAAKvE,MAAvC0E,EAAR,EAAQA,cAAehB,EAAvB,EAAuBA,QAASK,EAAhC,EAAgCA,MAC3BW,GAELA,EADchB,IAAYe,GAAsB,QAAVV,EAChB,OAAS,MAAOU,K,uBAGxC,SAAUE,GACR,OAAOJ,KAAKD,WAAaK,I,0BAG3B,SAAaC,GACX,IAAQC,EAAgBN,KAAKvE,MAArB6E,YACR,OAAKA,EAAYC,QACOD,EAAYE,QAClC,SAACC,EAAMC,GAAP,OAAeD,EAAKE,OAAO,CAACD,EAAMD,EAAKA,EAAKF,OAAS,OACrD,CAAC,IAEqBK,WAAU,SAACC,GAAD,OAAOR,EAAMQ,KAAK,GAAK,EALzB,I,oBAQlC,WAAU,IAAD,OACP,EAEIb,KAAKvE,MADPmC,EADF,EACEA,YAAakD,EADf,EACeA,gBAAiBC,EADhC,EACgCA,QAAST,EADzC,EACyCA,YAAad,EADtD,EACsDA,MAAOL,EAD7D,EAC6DA,QAE7D,GAAImB,EAAYC,SAAWQ,EAAQR,OAAU,MAAM,IAAIS,MAAM,iDAC7D,YAAoBC,IAAhBrD,EAAkC,eAACsD,EAAA,EAAD,yBACjCtD,EAEH,gBAACuD,EAAA,EAAD,CAAMC,UAAU,SAASC,WAAW,WAAWC,QAAS,EAAGC,WAAS,EAApE,UACE,eAACJ,EAAA,EAAD,CAAMI,WAAS,EAACC,MAAI,EAApB,SACE,eAACC,EAAA,EAAD,CAAgBC,UAAWtE,IAAOF,MAAO,CAAEyE,UAAW,KAAtD,SACE,gBAACC,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,gBAACC,EAAA,EAAD,WAEIf,EAAQR,OAAS,GACf,eAACwB,EAAA,EAAD,UAEMhB,EAAQvD,KAAI,SAACwE,EAAM3B,GACjB,IAAM4B,EAAkB5D,GAAY,GAAGgC,EAAM,GAC7C,OACE,eAAC4B,EAAD,CAEEC,MAAM,SACNC,QAAS7B,EAAYD,GAHvB,SAKG2B,GAJIA,QAYrB,eAACD,EAAA,EAAD,UAEInE,EAAYE,QAAQN,KAAI,SAAC4E,EAAQ/B,GAC/B,IAAM4B,EAAkB5D,GAAY,GAAG,EAAKgE,aAAahC,IACzD,OACE,eAAC4B,EAAD,CAEE/E,MAAO,CACLoF,IAAKvB,EAAQR,OAAS,EAAI,GAAK,GAHnC,SAME,eAACgC,EAAA,EAAD,CACEC,OAAQrD,IAAYkB,EACpBe,UAAWjC,IAAYkB,EAAMb,EAAQ,MACrC/C,QAAS,kBAAM,EAAKgG,kBAAkBpC,IAHxC,SAKG+B,KAVE,EAAKM,UAAUN,EAAS/B,YAkBzC,eAACsC,EAAA,EAAD,UAEI1D,GAAWrB,EAAYG,OAAQoB,EAAmB,QAAVK,GAAiBhC,KACvD,SAAC8B,EAAKe,GAAN,OACE,eAAC0B,EAAA,EAAD,UAEIzC,EAAI,GAAG9B,KACL,SAACoF,EAAKC,GACJ,IAAIC,EAAQF,EACR9B,GAAmBA,EAAgB+B,KACrCC,EAAQhC,EAAgB+B,GAAGD,IAE7B,IAAMX,EAAkB5D,GAAYgC,EAAM,GAAG,EAAKgC,aAAaQ,IAC/D,OACE,eAACZ,EAAD,UAGGa,GAFI,EAAKJ,UAAL,UAAkBpD,EAAI,GAAtB,YAA4BuD,SAX9B,EAAKH,UAAUpD,EAAI,iBA2BhD,eAAC6B,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,eAAC,GAAD,CAAqB5D,YAAaA,SAlFxB,S,GAtCJ9B,IAAMiH,WA+H/BjD,GAAWkD,aAxLU,CACnBlC,gBAAiB,KACjBC,QAAS,GACTT,YAAa,GACbH,cAAe,KACfX,MAAO,MACPL,QAAS,KACTvB,YAAa,MAmLAkC,UC1NA,OAA0B,mCCqBzC,SAASmD,GAAmBxH,GAC1B,IAAMyH,EAAWpH,IAAMC,SAYvB,OAVAD,IAAMqH,WAAU,WACd,IAAMC,EAAUC,YAAW,WACzBH,EAAShH,QAAQoH,UAChB,KAEH,OAAO,WACLC,aAAaH,MAEd,IAEI,eAACI,EAAA,EAAD,aAAWN,SAAUA,GAAczH,IAG5C,SAASgI,KACP,OACE,eAAC,iBAAD,CACEC,SAAUC,GACVC,QAAM,EACNC,cAAc,MACdC,eAAa,I,IA8IJC,G,kDAxIb,WAAYtI,GAAQ,IAAD,uBACjB,gBACKuI,GAAKvI,EAAMuI,GAChB,EAAKC,OAASC,IAAGC,MAAM1I,EAAM2I,QAAQC,SAASC,QAC9C,IAAMC,EAAY,UAAW,EAAKN,OAAU,EAAKA,OAAOO,MAAQ,GAJ/C,OAMjB,EAAKC,MAAQ,CACXF,WACA/E,MAAO,MACPL,QAAS,KACTvB,YAAa,KACb8G,MAAO,KACPC,iBAAiB,GAZF,E,qDAgBnB,WAAqB,IAAD,OACVJ,EAAavE,KAAKyE,MAAlBF,SAER,GADA5J,SAASiK,MAAQ,0BACA,KAAbL,EAAJ,CAEA,IAAMM,EAAWN,EACjBvE,KAAK8E,SAAS,CAAEH,iBAAiB,IACjCtB,YACE,WACE,IACE,IAAM0B,EAAU,EAAKf,GAAGgB,KAAKH,GAAU,GACvC,EAAKC,SAAS,CAAElH,YAAamH,EAASL,MAAO,KAAMC,iBAAiB,IACpE,MAAOD,GACP,EAAKI,SAAS,CAAElH,YAAa,KAAM8G,QAAOC,iBAAiB,OAG/D,M,6BAIJ,WACE,IAAQP,EAAYpE,KAAKvE,MAAjB2I,QACAG,EAAavE,KAAKyE,MAAlBF,SACRvE,KAAKiE,OAAOO,MAAQD,EACpB,IAAMD,EAAM,WAAOJ,IAAG/F,UAAU6B,KAAKiE,SACjCG,EAAQC,SAASC,SAAWA,GAC9BF,EAAQa,KAAK,CACXC,SAAUd,EAAQC,SAASa,SAC3BZ,a,oBAKN,WAAU,IAAD,OACP,EAEItE,KAAKyE,MADPC,EADF,EACEA,MAAOlF,EADT,EACSA,MAAOL,EADhB,EACgBA,QAASwF,EADzB,EACyBA,gBAAiB/G,EAD1C,EAC0CA,YAAa2G,EADvD,EACuDA,SAEvD,OACE,gBAACpD,EAAA,EAAD,CAAMI,WAAS,EAACH,UAAU,SAASE,QAAS,EAA5C,UACE,eAACH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACpE,EAAA,EAAD,UACE,eAACf,EAAA,EAAD,CAAK8I,EAAG,EAAR,SACE,gBAAChE,EAAA,EAAD,CAAMI,WAAS,EAACH,UAAU,SAASE,QAAS,EAA5C,UACE,eAACH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACyB,GAAD,CACEmC,MAAM,YACNC,WAAS,EACTC,WAAS,EACTC,OAAO,SACPC,KAAM,EACNC,QAAS,IACTlJ,QAAQ,WACRmI,MAAgB,MAATA,EACPgB,WAAYhB,EAAQA,EAAMiB,WAAa,GACvC7C,MAAOyB,EACPqB,SAAU,SAAC/E,GAAD,OAAO,EAAKiE,SAAS,CAAEP,SAAU1D,EAAEzE,OAAO0G,aAGxD,eAAC3B,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACnF,EAAA,EAAD,CAAKwJ,QAAQ,OAAOC,eAAe,SAAnC,SACE,eAACxJ,EAAA,EAAD,CACEC,QAAQ,YACRwJ,MAAM,UACNC,SAAUrB,EACVlI,QAAS,kBAAM,EAAKwJ,mBAJtB,SAMItB,EAAmB,eAAiB,2BAQpD,eAACxD,EAAA,EAAD,CAAMI,WAAS,EAACC,MAAI,EAApB,SACE,eAAC0E,EAAA,EAAD,CAAWC,UAAU,EAAOC,gBAAc,EAA1C,SACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAkBC,WAAY,eAAC,IAAD,IAA9B,8BAGA,eAACC,EAAA,EAAD,UACE,eAAC/C,GAAD,aAKR,eAACtC,EAAA,EAAD,CAAMI,WAAS,EAACC,MAAI,EAApB,SACE,eAAC0E,EAAA,EAAD,CAAWC,UAAU,EAAOC,gBAAc,EAA1C,SACE,eAAChJ,EAAA,EAAD,UACE,eAACf,EAAA,EAAD,CAAK8I,EAAG,EAAGU,QAAQ,OAAOC,eAAe,SAAzC,SACE,eAAC,GAAD,CACElI,YAAaA,EACb4B,MAAOA,EACPL,QAASA,EACTgB,cAAe,SAACsG,EAAUC,GAAX,OAA0B,EAAK5B,SAAS,CACrDtF,MAAOiH,EAAUtH,QAASuH,sB,GAhHjB5K,IAAMiH,W,8BC3BnC,SAAS4D,GAAT,GAAyC,IAAnBC,EAAkB,EAAlBA,MAAOnK,EAAW,EAAXA,QAC3B,OACE,eAACoK,GAAA,EAAD,UAEIC,OAAOC,KAAKH,GAAOpJ,KAAI,SAACwJ,GAAD,OACrB,eAACC,GAAA,EAAD,CAAoBC,QAAM,EAACzK,QAAS,kBAAMA,EAAQuK,IAAlD,SACE,eAACG,GAAA,EAAD,CAAcC,QAASR,EAAMI,GAAKhF,KAAMqF,UAAWT,EAAMI,GAAKM,eADjDN,QASzBL,GAAW3D,aA3BU,CACnB4D,MAAO,CAAEW,SAAS,IA6BLZ,U,qGCnCA,SAASa,GAAYC,GAClC,SAASC,EAAWjM,EAAOe,GACzB,OACE,eAACmL,GAAA,EAAD,yBAASnL,IAAKA,GAASf,GAAvB,aACGgM,KAKP,OADAC,EAAWE,YAAc,iBAClB9L,IAAM4L,WAAWA,GCT1B,IAOeG,GAPFL,GACX,uCACE,uBAAMM,EAAE,i2BACR,uBAAMA,EAAE,4tDCHNC,GAAc,CAClBC,KAAM,CAAEC,MAAO,KAAMC,KAAM,6CAC3B,EAAG,CAAED,MAAO,UAAWC,KAAM,+CAC7B,EAAG,CAAED,MAAO,UAAWC,KAAM,+CAC7B,KAAM,CAAED,MAAO,oBAAqBC,KAAM,8DAC1C,KAAM,CAAED,MAAO,mBAAoBC,KAAM,oDAGrCC,GAAc,CAClB,UAAW,kEACX,UAAW,iEACX,UAAW,2DACX,UAAW,mEAGPC,GAAe,CACnBC,IAAK,CACHrG,KAAM,sBACNsG,KAAMC,KACNC,MAAO,KACPC,OAAQ,aACRC,QAAS,MACTC,SAAU,UACVC,QAAS,MACTC,SAAU,WAEZC,IAAK,CACH9G,KAAM,mBACNsG,KAAMS,GACNP,MAAO,MACPC,OAAQ,YACRC,QAAS,OACTC,SAAU,OACVC,QAAS,OACTC,SAAU,W,wCCrCC,SAASG,GAAI1K,EAAGC,GAC7B,OAAOD,EAAE2K,QAAO,SAACnG,GAAD,OAAiC,IAAtBvE,EAAE2K,QAAQpG,MCsBvC,IAAMqG,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJC,SAAU,IACVnD,SAAU,IACVoD,SAAU,OACV5H,UAAW,KAEb6H,SAAU,CACRC,QAAS,OA4EEC,OAxEf,SAA4BjO,GAC1B,IAgByBkO,EAhBjBC,EAAgCnO,EAAhCmO,KAAMC,EAA0BpO,EAA1BoO,YAAajE,EAAanK,EAAbmK,SACrBkE,EAAO,OAAGD,QAAH,IAAGA,IAAe,GAazBE,EAAkB,SAACJ,GAAD,OClDWrL,EDkDawL,EClDVvL,EDkDmBoL,ECjDlDrL,EAAE2K,QAAO,SAACnG,GAAD,OAAiC,IAAtBvE,EAAE2K,QAAQpG,ODiD2BvC,OClDnD,IAAsBjC,EAAGC,GD8DhCyL,EAAUb,KAEhB,OACE,gBAACc,GAAA,EAAD,WACE,eAACpD,GAAA,EAAD,UACE,gBAACI,GAAA,EAAD,CAAUiD,OAAK,EAACC,UAAWH,EAAQR,SAAUtC,QAAM,EAACzK,SAfjCkN,EAe0DC,EAfhD,WACjC,IAAIQ,EEnDsB9L,EAAGC,EFoDzBwL,EAAgBJ,KAAWA,EAAMpJ,OACnC6J,EAAapB,GAAIc,EAASH,IErDFrL,EFuDLwL,EEvDQvL,EFuDCoL,EAA5BS,EEtDE,GAAN,mBAAW9L,GAAX,YAAiB0K,GAAIzK,EAAGD,MFwDtBsH,EAASwE,KAQL,UACE,eAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACER,QAASC,EAAgBH,KAAUA,EAAKrJ,QAA0B,IAAhBqJ,EAAKrJ,OACvDgK,cAAeR,EAAgBH,KAAUA,EAAKrJ,QAAoC,IAA1BwJ,EAAgBH,GACxEY,UAAW,EACXC,eAAa,MAGjB,eAACtD,GAAA,EAAD,CAAcC,QAAQ,iBAG1B,eAACsD,GAAA,EAAD,IACA,eAAC7D,GAAA,EAAD,CAAMsD,UAAWH,EAAQX,KAAzB,SACGO,EAAKpM,KAAI,SAACsF,GAAD,OACR,gBAACmE,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAWH,EAAQR,SAEnBtC,QAAM,EACNzK,SAhDkBkO,EAiDC7H,EAjDU,WACrC,IAAM8H,EAAed,EAAQZ,QAAQyB,GAC/BP,EAAU,YAAON,IAED,IAAlBc,EACFR,EAAWnF,KAAK0F,GAEhBP,EAAWS,OAAOD,EAAc,GAElChF,EAASwE,KAkCH,UASE,eAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACER,SAAqC,IAA5BA,EAAQZ,QAAQpG,GACzB0H,UAAW,EACXC,eAAa,MAGjB,eAACtD,GAAA,EAAD,CAAcC,QAAStE,MAblBA,GA9CY,IAAC6H,WGvCf,SAASG,GAAWH,EAAQI,GACzC,IAAIC,EAAM,UAIV,OAHAA,GAAG,WAAQL,QACI1J,IAAX8J,IAAwBC,GAAG,WAAQD,IAEhCC,ECLM,SAASC,GAAkBC,EAAMC,GAC9C,IAAKC,OAAOC,SAASH,GAAO,MAAO,GACnC,IAAMI,EAAc,IAATJ,EAAc,EAAIK,KAAKC,MAAMD,KAAKE,IAAIP,GAAQK,KAAKE,IAAI,MAClE,MAAM,GAAN,OAA0C,GAA/BP,EAAI,SAAG,IAAQI,IAAGI,QAAQ,GAArC,YAA+C,CAAC,GAAI,IAAK,IAAK,IAAK,KAAKJ,IAAxE,OAA6EH,GCHhE,SAASQ,GAAS3H,EAAIQ,EAAOP,GAG1C,IAFA,IAAM2H,EAAO5H,EAAG6H,QAAQrH,EAAOP,GACzB6H,EAAS,GACRF,EAAKG,QACVD,EAAO7G,KAAK2G,EAAKI,eAGnB,OADAJ,EAAKK,OACEH,EC2BT,SAASI,GAAmBlI,EAAIjJ,EAAMoR,EAAWC,GAQ/C,OADoBT,GAAS3H,EANP,gHAIoBoI,EAAW,yBAA6B,GAJ5D,SAM6B,CAACrR,EAAMoR,IACvC3O,KAAI,SAAC8B,GAAD,OAASA,EAAI+M,WAGtC,IAAMC,GAAgB,CACpB,CAAElH,MAAO,IAAKtC,MAAO,GAAK,CAAEsC,MAAO,MAAOtC,MAAO,KAAO,CAAEsC,MAAO,KAAMtC,MAAO,IAC9E,CAAEsC,MAAO,MAAOtC,MAAO,KAAO,CAAEsC,MAAO,OAAQtC,MAAO,MAGlDyJ,GAAiB,CACrB,CAAEnH,MAAO,IAAKtC,MAAO,GAAK,CAAEsC,MAAO,KAAMtC,MAAO,GAAK,CAAEsC,MAAO,KAAMtC,MAAO,IAG7E,SAAS0J,GAAkBC,GAEzB,OADcF,GAAeG,MAAK,SAACC,GAAD,OAAWA,EAAM7J,QAAU2J,KAChDrH,MAkGf,SAASwH,GAAcnI,GACrB,IAAMR,EAAS,CAACQ,EAAMoI,WAAYpI,EAAM0H,UAAW1H,EAAMqI,cAAerI,EAAMsI,iBAI9E,OAHItI,EAAMuI,YAAYC,SAAS,eAA0C,KAAzBxI,EAAMyI,gBACpDjJ,EAAOgB,KAAKR,EAAMyI,gBAEbjJ,EAGT,SAASkJ,GAAmBpI,GAC1B,QAAgB9D,IAAZ8D,EAAJ,CACA,IAAMjE,EAAkBsM,MAAMrI,EAAQjH,QAAQyC,QAAQ8M,UAAKpM,GAM3D,OALA8D,EAAQjH,QAAQwP,SAAQ,SAACC,EAAKlN,GACxBkN,EAAIC,SAAS,eAAc1M,EAAgBT,GAAO,SAACuC,GAAD,cAASA,QAAT,IAASA,OAAT,EAASA,EAAK6K,mBAChEF,EAAIC,SAAS,UAAS1M,EAAgBT,GAAO,SAACuC,GAAD,OAASqI,GAAkBrI,EAAK,OAC7E2K,EAAIC,SAAS,iBAAgB1M,EAAgBT,GAAO,SAACuC,GAAD,OAASqI,GAAkBrI,EAAK,UAEnF9B,G,IA6bM4M,G,kDAzbb,WAAYjS,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAQ2I,EAAgB3I,EAAhB2I,QAASJ,EAAOvI,EAAPuI,GACjB,EAAK2J,sBAAwB,KAC7B,EAAKC,gBAAkB,CACrBvF,IAAK6D,GAAmBlI,EAAI,MAAO,KAAK,GACxC8E,IAAKoD,GAAmBlI,EAAI,MAAO,KAAK,IAE1C,EAAKS,MAAQ,CACXE,iBAAiB,EACjB/G,iBAAaqD,EACb4M,YAAa,GACbrJ,MAAO,OACPzD,QAAS,GACTT,YAAa,IAGf,EAAKwN,aAAe,CAElBd,YAAa,CAAC,aAAc,cAAe,iBAC3CH,WAAY,MACZK,eAAgB,GAChBa,YAAa,IACbjB,cAAe,IACfC,gBAAiB,EACjBiB,SAAS,EACT7B,UAAW,KACX8B,oBAAoB,EACpBzO,MAAO,MACPL,QAAS,KACT+O,eAAgB,MAElBpH,OAAOqH,OAAO,EAAK1J,MAAO,EAAKqJ,cAC/B,IAAM7J,EAASC,IAAGC,MAAMC,EAAQC,SAASC,QACzC,GAAI,UAAWL,EACb,IACE,IAAMmK,EAAalQ,KAAKiG,MAAMF,EAAOQ,OACrCqC,OAAOqH,OAAO,EAAK1J,MAAO2J,GAC1B,UAIJ,MAAuC,EAAK3J,MAApCyJ,EAAR,EAAQA,eAAgBrB,EAAxB,EAAwBA,WA1CP,OA2CZqB,IACH,EAAKzJ,MAAMyJ,eAAiB,EAAKN,gBAAgBf,IA5ClC,E,qDAgDnB,WACE,IAAQqB,EAAmBlO,KAAKyE,MAAxByJ,eACRlO,KAAKqO,cAAcH,GAAgB,GACnCvT,SAASiK,MAAQ,6B,gCAGnB,SAAmB0J,EAAWC,GAAY,IAAD,OACvC,EAEIvO,KAAKyE,MADPE,EADF,EACEA,gBAAiBkI,EADnB,EACmBA,WAAYrN,EAD/B,EAC+BA,MAAOL,EADtC,EACsCA,QAEtC,GAAIwF,EAAiB,CACnB,IAAM6J,EAAeD,EAAU1B,aAAeA,EAC9CxJ,YAAW,WACT,EAAKgL,aAAaG,GAAc,GAChC,EAAKC,oBAAmB,KACvB,UACMF,EAAU/O,QAAUA,GAAS+O,EAAUpP,UAAYA,GAC5Da,KAAKyO,oBAAmB,K,4BAI5B,SAAeC,GACb1O,KAAK8E,SAAL,aAAgBH,iBAAiB,GAAS+J,M,yBAG5C,WAME,IAAMzK,EAAS2I,GAAc5M,KAAKyE,OAAOkK,QACrCjK,GAAQ,EAYZ,IACMG,EADY7E,KAAKyE,MAAfD,MACeoK,WAAW,KAXlC,WACE,IAAMhM,EAAMqB,EAAO4K,QACnB,YAAY5N,IAAR2B,GACF8B,GAAQ,EACD,IAEU,kBAAR9B,EAAwB,IAAN,OAAWA,EAAIgM,WAAW,IAAM,MAAhC,KACtBhM,EAAI+C,cAKb,OAAIjB,GAAST,EAAO1D,OAAS,EACpB,GAEFsE,I,2BAGT,SAAcJ,EAAOI,GACnB,IAEME,ECrRK,SAAyBf,EAAIQ,EAAOP,GAGjD,IAFA,IAAM2H,EAAO5H,EAAG6H,QAAQrH,EAAOP,GACzB6H,EAAS,CAAEhO,QAAS8N,EAAKkD,iBAAkB/Q,OAAQ,IAClD6N,EAAKG,QACVD,EAAO/N,OAAOkH,KAAK2G,EAAKmD,OAG1B,OADAnD,EAAKK,OACEH,ED8QWkD,CAFDhP,KAAKvE,MAAZuI,GAE4Ba,EADrB+H,GAAcnI,IAE7B,GAA8B,IAA1BM,EAAQhH,OAAOwC,OAOnB,OANAwE,EAAQjH,QAAQ+Q,QAChB9J,EAAQhH,OAAOuP,SAAQ,SAAC2B,GACtBA,EAAI,GAAK,eAACC,GAAA,EAAD,CAAMxN,UAAWyN,IAAYC,GAAItE,GAAWmE,EAAI,IAAhD,SAAsDA,EAAI,KACnEA,EAAIJ,WAGC9J,I,0BAGT,SAAayJ,EAAca,GACzB,IAAMC,EAAU,eAAQtP,KAAKyE,OACrBT,EAAOhE,KAAKvE,MAAZuI,GACR,EAAsDhE,KAAKyE,MAAnDoI,EAAR,EAAQA,WACFgB,EAAc3B,GAAmBlI,EAAI6I,EAD3C,EAAoBV,UAApB,EAA+B8B,oBAE3BO,IAAcc,EAAWpB,eAAiBlO,KAAK4N,gBAAgBf,IACnE,IAAMrI,EAtOV,SAAoBC,GAAQ,IAAD,EACzB,MAAM,oIAAN,OAOCA,EAAMuI,YAAYC,SAAS,cAAiB,qCAAyC,IAPtF,OAQExI,EAAMuI,YAAYC,SAAS,mBAAsB,oEAAwE,IAR3H,OASExI,EAAMuI,YAAYC,SAAS,mBAAsB,gEAAoE,IATvH,OAUExI,EAAMuI,YAAYC,SAAS,iBAAoB,2DAA+D,IAVhH,OAWExI,EAAMuI,YAAYC,SAAS,WAA5B,0GAGoB7E,GAAa3D,EAAMoI,YAAYpE,OAHnD,oEAIwD,IAfzD,OAe+DhE,EAAMuI,YAAYC,SAAS,cAA5B,+BAC3CxI,EAAMuI,YAAYC,SAAS,eAA5B,6MAQU,GATkC,gBAU3DxI,EAAMuI,YAAYC,SAAS,aAA5B,gIAGyB7E,GAAa3D,EAAMoI,YAAYlE,SAHxD,oDAIyBP,GAAa3D,EAAMoI,YAAYhE,SAJxD,gBAIiF,GAdrB,uIAiBvBT,GAAa3D,EAAMoI,YAAYlE,SAjBR,gEAkBvBP,GAAa3D,EAAMoI,YAAYhE,SAlBR,yHAoB3DpE,EAAMuI,YAAYC,SAAS,cAA5B,wGAEmC7E,GAAa3D,EAAMoI,YAAYlE,SAFlE,gEAGmCP,GAAa3D,EAAMoI,YAAYhE,SAHlE,kBAG6F,GAvBjC,MAwB5D,GAvCF,6GA2CwCpE,EAAMuI,YAAYC,SAAS,cAA5B,gHAEqB,GA7C5D,sDAgDoB/O,KAAKC,UAAL,UAAesG,EAAMyJ,sBAArB,QAAuC,IAAIS,MAAM,GAAI,GAhDzE,4DAmDClK,EAAMwJ,mBAAsB,qCAAyC,GAnDtE,4FAuDCxJ,EAAMuI,YAAYC,SAAS,eACrBxI,EAAMuJ,QAAgD,GAArC,mCACW,KAAzBvJ,EAAMyI,eAAyB,4CAAkD,IACvF,IA2KYqC,CAAWD,GACnB1R,EAAcoC,KAAKwP,cAAcF,EAAY9K,GAC/CkK,EAAS5H,OAAOqH,OAtKxB,SAA8B1J,GAC5B,IAAM1D,EAAU,GACVT,EAAc,GAmBpB,OAlBAS,EAAQkE,KAAK,iBACb3E,EAAY2E,KAAK,GACbR,EAAMuI,YAAYC,SAAS,qBAAsB3M,EAAYA,EAAYC,OAAS,IAAM,GACxFkE,EAAMuI,YAAYC,SAAS,mBAAoB3M,EAAYA,EAAYC,OAAS,IAAM,GACtFkE,EAAMuI,YAAYC,SAAS,gBAAiB3M,EAAYA,EAAYC,OAAS,IAAM,GACnFkE,EAAMuI,YAAYC,SAAS,aAC7BlM,EAAQkE,KAAK,QACb3E,EAAY2E,KAAK,IAEfR,EAAMuI,YAAYC,SAAS,gBAC7BlM,EAAQkE,KAAK,kBACb3E,EAAY2E,KAAK,GACbR,EAAMuI,YAAYC,SAAS,iBAAkB3M,EAAYA,EAAYC,OAAS,IAAM,GACpFkE,EAAMuI,YAAYC,SAAS,eAAgB3M,EAAYA,EAAYC,OAAS,IAAM,GACtFQ,EAAQkE,KAAK,aACb3E,EAAY2E,KAAK,GACbR,EAAMuI,YAAYC,SAAS,gBAAiB3M,EAAYA,EAAYC,OAAS,IAAM,IAElF,CAAEQ,UAAST,eAiJWmP,CAAqBH,GAAa,CAC3D3K,iBAAiB,EAAO/G,cAAaiQ,cAAarJ,UAEhDgK,IAAcE,EAAOR,eAAiBlO,KAAK4N,gBAAgBf,IAC3DwC,IAAYX,EAAS5H,OAAOqH,OAAOO,EAAQ,CAAElP,MAAO,MAAOL,QAAS,QACxEa,KAAK8E,SAAS4J,K,gCAGhB,SAAmBgB,GAAU,IAAD,WACpBC,EAAc,GACZ9C,EAAe7M,KAAKyE,MAApBoI,WACR7M,KAAK8N,aAAaI,eAAiBlO,KAAK4N,gBAAgBf,GACxD/F,OAAOC,KAAK/G,KAAK8N,cAAcR,SAAQ,SAACtG,GAEtC,IAAMlE,EAAQ,EAAK2B,MAAMuC,GACrBoG,MAAMwC,QAAQ,EAAK9B,aAAa9G,KAASoG,MAAMwC,QAAQ9M,IACrDkG,GAAI,EAAK8E,aAAa9G,GAAMlE,GAAOvC,OAAS,GAC5CyI,GAAIlG,EAAO,EAAKgL,aAAa9G,IAAMzG,OAAS,KAC9CoP,EAAY3I,GAAOlE,GAEZA,IAAU,EAAKgL,aAAa9G,KACrC2I,EAAY3I,GAAOlE,MAGvB,IAAM+M,EAAiB3R,KAAKC,UAAUwR,GAChCG,EAAgB,CACpB,KAAM,KAA0B,OAAnBD,EAA2B,IAA5B,WAAsC3L,IAAG/F,UAAU,CAAEsG,MAAOoL,MAEtEH,GAAS,EAAAK,OAAO3L,SAAQ4L,aAAf,QAA+BF,IACvC,EAAAC,OAAO3L,SAAQ6L,UAAf,QAA4BH,K,oBAGnC,WAAU,IA7QeI,EA6QhB,OACDC,EAAgBnQ,KAAKoQ,cAC3B,EAIIpQ,KAAKyE,MAHPyJ,EADF,EACEA,eAAgBnN,EADlB,EACkBA,QAAST,EAD3B,EAC2BA,YAAa6L,EADxC,EACwCA,UAAW3M,EADnD,EACmDA,MAAOL,EAD1D,EAC0DA,QAAS+N,EADnE,EACmEA,eACjEvI,EAFF,EAEEA,gBAAiB/G,EAFnB,EAEmBA,YAAakP,EAFhC,EAEgCA,cAAeC,EAF/C,EAE+CA,gBAAiBc,EAFhE,EAEgEA,YAAahB,EAF7E,EAE6EA,WAC3EG,EAHF,EAGEA,YAAaiB,EAHf,EAGeA,mBAAoBD,EAHnC,EAGmCA,QAEnC,OACE,gBAAC7M,EAAA,EAAD,CAAMI,WAAS,EAACH,UAAU,SAASE,QAAS,EAA5C,UACE,eAACH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0E,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAC/I,EAAA,EAAD,UACE,gBAACf,EAAA,EAAD,CAAK8I,EAAG,EAAR,UACE,gBAAChE,EAAA,EAAD,CAAM2E,eAAe,gBAAgBvE,WAAS,EAACH,UAAU,MAAzD,UACE,eAACD,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACN,EAAA,EAAD,CAAY3E,QAAQ,KAApB,iCAEF,eAAC4E,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAAC6O,GAAA,EAAD,CACEvN,MAAO+J,EACPyD,WAAS,EACTpF,KAAK,SACLtF,SAAU,SAAC2K,EAAQzN,GACH,OAAVA,GAAgB,EAAK0N,eAAe,CAAE3D,WAAY/J,KAL1D,UAQE,eAAC2N,GAAA,EAAD,CAAczK,SAAUrB,EAAiB7B,MAAM,MAA/C,uBAGA,eAAC2N,GAAA,EAAD,CAAczK,SAAUrB,EAAiB7B,MAAM,MAA/C,kCAMN,gBAACzG,EAAA,EAAD,CAAKqU,GAAI,EAAT,UACE,eAACtT,EAAA,EAAD,UACE,gBAACf,EAAA,EAAD,CAAK8I,EAAG,EAAGwL,GAAI,EAAf,UACE,eAACtU,EAAA,EAAD,CAAKsU,GAAI,EAAT,SACE,eAACzP,EAAA,EAAD,CAAY3E,QAAQ,SAApB,yCAEF,eAACF,EAAA,EAAD,CAAKwJ,QAAQ,OAAOC,eAAe,SAAnC,SACE,gBAACuK,GAAA,EAAD,CACEvN,MAAOkK,EACP9B,KAAK,SACLtF,SAAU,SAAC2K,EAAQzN,GAAT,OAAmB,EAAK0N,eAAe,CAAExD,YAAalK,KAHlE,UAKE,eAAC2N,GAAA,EAAD,CAAczK,SAAUrB,EAAiB7B,MAAM,UAA/C,SACE,eAAC8N,EAAA,EAAD,CAAShM,MAAM,wCAAf,SACE,6CAGJ,eAAC6L,GAAA,EAAD,CAAczK,SAAUrB,EAAiB7B,MAAM,aAA/C,SACE,eAAC8N,EAAA,EAAD,CAAShM,MAAM,uCAAf,SACE,kDAGJ,eAAC6L,GAAA,EAAD,CACEzK,SAAUrB,IAAoBqI,EAAYC,SAAS,cACnDnK,MAAM,cAFR,SAIE,eAAC8N,EAAA,EAAD,CAAShM,MAAM,mDAAf,SACE,yDAGJ,eAAC6L,GAAA,EAAD,CACEzK,SAAUrB,IAAoBqI,EAAYC,SAAS,cACnDnK,MAAM,YAFR,SAIE,eAAC8N,EAAA,EAAD,CAAShM,MAAM,2CAAf,SACE,iDAGJ,eAAC6L,GAAA,EAAD,CACEzK,SAAUrB,IAAoBqI,EAAYC,SAAS,cACnDnK,MAAM,aAFR,SAIE,eAAC8N,EAAA,EAAD,CAAShM,MAAM,0CAAf,SACE,2DAGJ,eAAC6L,GAAA,EAAD,CAAczK,SAAUrB,EAAiB7B,MAAM,kBAA/C,SACE,eAAC8N,EAAA,EAAD,CAAShM,MAAM,6CAAf,SACE,uDAGJ,eAAC6L,GAAA,EAAD,CAAczK,SAAUrB,EAAiB7B,MAAM,gBAA/C,SACE,eAAC8N,EAAA,EAAD,CAAShM,MAAM,4BAAf,SACE,qDAGJ,eAAC6L,GAAA,EAAD,CAAczK,SAAUrB,EAAiB7B,MAAM,aAA/C,SACE,eAAC8N,EAAA,EAAD,CAAShM,MAAM,wCAAf,SACE,4DAOZ,gBAACzD,EAAA,EAAD,CAAMI,WAAS,EAACsP,QAAQ,gBAAgBvP,QAAS,EAAjD,UACE,eAACH,EAAA,EAAD,CAAMK,MAAI,EAACsP,IAAE,EAAb,SACE,gBAACzK,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAkBC,WAAY,eAAC,IAAD,IAA9B,SACE,eAACrF,EAAA,EAAD,CAAY3E,QAAQ,SAApB,qCAEF,eAACiK,EAAA,EAAD,UACE,gBAACrF,EAAA,EAAD,CAAMI,WAAS,EAACD,QAAS,EAAGuP,QAAQ,gBAApC,UACE,gBAAC1P,EAAA,EAAD,CAAMI,WAAS,EAACC,MAAI,EAACJ,UAAU,SAAS0P,IAAE,EAA1C,UACE,gBAAC3P,EAAA,EAAD,CAAMI,WAAS,EAACC,MAAI,EAACF,QAAS,EAA9B,UACE,eAACH,EAAA,EAAD,CAAMK,MAAI,EAACsP,GAAI,EAAG5T,MAAO,CAAEoM,SAAU,IAArC,SACE,eAACjN,EAAA,EAAD,UAAK,eAAC6E,EAAA,EAAD,qCAEP,eAACC,EAAA,EAAD,CAAMK,MAAI,EAACsP,IAAE,EAAC5T,MAAO,CAAEoM,SAAU,KAAjC,SACE,eAACyH,GAAA,EAAD,CACE/K,SAAUrB,EACVoB,MAAM,YACNiL,aAAclE,EACdf,KAAM,GACNkF,IAAK,EACLC,IAAK,IACLC,MAAO7E,GACP8E,MAAM,WACNC,kBACE,SAACxQ,EAAG4L,GAAJ,OAAU,EAAK+D,eAAe,CAAE1D,cAAeL,KAEjD6E,kBAAkB,cAIxB,gBAACnQ,EAAA,EAAD,CAAMI,WAAS,EAACC,MAAI,EAACF,QAAS,EAA9B,UACE,eAACH,EAAA,EAAD,CAAMK,MAAI,EAACsP,GAAI,EAAG5T,MAAO,CAAEoM,SAAU,IAArC,SACE,eAACpI,EAAA,EAAD,iCAEF,eAACC,EAAA,EAAD,CAAMK,MAAI,EAACsP,IAAE,EAAC5T,MAAO,CAAEoM,SAAU,KAAjC,SACE,eAACyH,GAAA,EAAD,CACE/K,SAAUrB,EACVoB,MAAM,YACNiL,aAAcjE,EACdhB,KAAM,GACNkF,IAAK,EACLC,IAAK,IACLC,MAAO7E,GACP8E,MAAM,WACNC,kBACE,SAACxQ,EAAG4L,GAAJ,OAAU,EAAK+D,eAAe,CAAEzD,gBAAiBN,KAEnD6E,kBAAkB,cAIxB,gBAACnQ,EAAA,EAAD,CAAMI,WAAS,EAACC,MAAI,EAACF,QAAS,EAA9B,UACE,eAACH,EAAA,EAAD,CAAMK,MAAI,EAACsP,GAAI,EAAG5T,MAAO,CAAEoM,SAAU,IAArC,SACE,eAACpI,EAAA,EAAD,2BAEF,eAACC,EAAA,EAAD,CAAMK,MAAI,EAACsP,IAAE,EAAC5T,MAAO,CAAEoM,SAAU,KAAjC,SACE,eAACyH,GAAA,EAAD,CACE/K,SAAUrB,EACVoB,MAAM,YACNiL,cA5aTd,EA4ayC/D,EA3apDI,GAAeG,MAAK,SAACC,GAAD,OAAWA,EAAMvH,QAAU8K,KAChDpN,OA2aqBiJ,KAAM,KACNkF,IAAK,EACLC,IAAK,EACLC,MAAO5E,GACP6E,MAAM,WACNC,kBAAmB,SAACxQ,EAAG4L,GAAJ,OAAU,EAAK+D,eAAe,CAC/CrE,UAAWK,GAAkBC,MAE/B8E,iBAAkB/E,GAClB8E,kBAAkB,cAIxB,eAACnQ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACgQ,GAAA,EAAD,CACEC,QACE,eAACnH,GAAA,EAAD,CACEtE,SAAUrB,EACV+M,eAAgBzD,EAChBrI,SAAU,kBAAM,EAAK4K,eAAe,CAClCvC,oBAAqBA,OAI3B7I,MAAM,qDAIZ,eAACjE,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC,GAAD,CACEoI,KAAMiE,EACNhE,YAAaqE,EACbtI,SAAU,SAACwE,GAAD,OAAgB,EAAKoG,eAAe,CAC5CtC,eAAgB9D,mBAQ9B,eAACjJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAAC6E,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAkBC,WAAY,eAAC,IAAD,IAA9B,SACE,eAACrF,EAAA,EAAD,CAAY3E,QAAQ,SAApB,sCAEF,eAACiK,EAAA,EAAD,UACE,gBAACmL,GAAA,EAAD,CAAajQ,UAAU,WAAvB,UACE,eAAC8P,GAAA,EAAD,CACEC,QACE,eAACnH,GAAA,EAAD,CACEtE,SAAUrB,IAAoBqI,EAAYC,SAAS,cACnDyE,eAAgB1D,EAChBpI,SACE,kBAAM,EAAK4K,eAAe,CAAExC,SAAUA,OAI5C5I,MAAM,kCAER,eAAC5B,EAAA,EAAD,CACEwC,SAAUrB,IAAoBqI,EAAYC,SAAS,cACnD+D,aAAc9D,EACdnH,MAAM,YACNX,MAAM,WACN7I,QAAQ,WACRqJ,SAAU,SAAC/E,GACT0C,aAAa,EAAKoK,uBAClB,IAAMiE,EAAc/Q,EAAEzE,OAAO0G,MAC7B,EAAK6K,sBAAwBtK,YAAW,WACtC,EAAKsK,sBAAwB,KAC7B,EAAK6C,eAAe,CAAEtD,eAAgB0E,MACrC,wBAUnB,eAAC1C,GAAA,EAAD,CACExN,UAAWyN,IACXC,GAAE,yBAAoByC,mBAAmB1B,IAF3C,6CAUR,eAAChP,EAAA,EAAD,CAAMI,WAAS,EAACC,MAAI,EAApB,SACE,eAAC0E,EAAA,EAAD,CAAWC,UAAU,EAAOC,gBAAc,EAA1C,SACE,eAAChJ,EAAA,EAAD,UACE,eAACf,EAAA,EAAD,CAAK8I,EAAG,EAAGU,QAAQ,OAAOC,eAAe,SAAzC,SACE,eAAC,GAAD,CACE3F,cAAe,SAACsG,EAAUC,GAAX,OAA0B,EAAK5B,SAAS,CACrDtF,MAAOiH,EAAUtH,QAASuH,KAE5BlH,MAAOA,EACPL,QAASA,EACTvB,YAAaA,EACbkD,gBAAiBqM,GAAmBvP,GACpCmD,QAASA,EACTT,YAAaA,mB,GApaAxE,IAAMiH,W,oGErKtB+O,GALAtK,GACb,uBAAMM,EAAE,sJ,UCSV,SAASiK,GAAT,GAA6B,IAAVnN,EAAS,EAATA,MACjB,YAAc3D,IAAV2D,GAAiC,OAAVA,GAA4B,KAAVA,EAAuB,KAGlE,uCACG,SACD,eAACgM,EAAA,EAAD,CAASoB,aAAW,EAACpN,MAAOA,EAAO5H,UAAU,QAAQiV,OAAK,EAA1D,SACE,eAAC,KAAD,CAAUC,SAAS,UAAUhV,MAAO,CAAEiV,OAAQ,eAMtDJ,GAAQ/O,aAjBa,CACnB4B,MAAO,MAkBMmN,UCjBAK,GARC5K,GACd,qBAAG6F,KAAK,OAAOgF,OAAO,eAAeC,YAAY,MAAMC,cAAc,QAArE,UACE,uBAAMzK,EAAE,2DACR,uBAAMA,EAAE,iCACR,uBAAMA,EAAE,sCCaZ,SAAS0K,GAAT,GAA8C,IAA1B5S,EAAyB,EAAzBA,SAAU6S,EAAe,EAAfA,KAAM7N,EAAS,EAATA,MAClC,OACE,gBAACqC,GAAA,EAAD,CAAU5F,WAAW,aAArB,UACE,eAACgJ,GAAA,EAAD,UACE,eAACnJ,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,UAAnC,SACE,eAACqU,EAAA,EAAD,CAAShM,MAAOA,EAAOqN,OAAK,EAA5B,SAEE,eAACQ,EAAD,CAAMC,KAAK,MAAM,eAAa,EAAO,aAAY9N,EAAO,mBAAkB,aAIhF,eAACuC,GAAA,EAAD,UACGvH,OAMT4S,GAASxP,aA5BY,CACnBpD,SAAU,MA8BG4S,UC9BAG,GARFnL,GACX,uCACE,uBAAMM,EAAE,+lBAA+lB5K,MAAO,CAAE0V,SAAU,aAC1nB,uBAAM9K,EAAE,2bACR,uBAAMA,EAAE,ucCgBG+K,OAff,YAAoC,IAAbjT,EAAY,EAAZA,SACrB,OACE,uCACE,eAAC,KAAD,CAAUsS,SAAS,YACnB,gCACG,IACAtS,EACA,WCZM,SAASkT,GAAQC,GAC9B,IAAM/H,EAAM+H,EAAEC,MAAM,+BACpB,OAAOhI,EAAM,eAACkE,GAAA,EAAD,CAAMlU,KAAMgQ,EAAZ,SAAkB+H,IAAYA,ECL9B,SAASE,GAASC,GAC/B,IAAMC,EAAS,CAAC,OAAK,IAAK,KAAM,MAAO,KAAM,KAC7C,OAAI/H,OAAOgI,UAAUF,SAAgCjS,IAApBkS,EAAOD,GAA+BC,EAAOD,GACvEA,E,ICgZMG,G,kDA3Vb,WAAY5X,GAAQ,IAAD,8BACjB,cAAMA,IACDgJ,MAAQ,CACXkG,OAAQ,KACRI,YAAQ9J,EACRqS,eAAWrS,EACXsS,qBAAiBtS,EACjBuS,WAAOvS,EACPwS,aAASxS,GARM,E,qDAYnB,WACE,MAA0DjB,KAAKvE,MAA/D,IAAQuX,MAAS/O,OAAUyP,EAA3B,EAA2BA,SAAUC,EAArC,EAAqCA,SAAc3P,EAAnD,EAAmDA,GAE7C2G,EAASgB,GAAS3H,EAAI,uCAAwC,CAAC0P,IAAW,GAC1E3I,EAASY,GAAS3H,EAAI,uDAAwD,CAAC2G,EAAOiJ,GAAID,IAAW,GAC3G,QAAe1S,IAAX0J,QAAmC1J,IAAX8J,EAC1BpQ,SAASiK,MAAQ,kCACjB5E,KAAK8E,SAAS,CAAE6F,eACX,CACLhQ,SAASiK,MAAT,UAAoBmG,EAAO/I,KAA3B,4BACA,IAAMsR,EAAY3H,GAAS3H,EAAI,iHAAkH,CAAC+G,EAAO6I,KACnJL,EAAkB5H,GAAS3H,EAAI,oEAAqE,CAAC+G,EAAO6I,KAC5GJ,EAAQ7H,GAAS3H,EAAI,8CAA+C,CAAC+G,EAAO6I,KAC5EH,EAAU9H,GAAS3H,EAAI,gDAAiD,CAAC+G,EAAO6I,KACtF5T,KAAK8E,SAAS,CACZ6F,SACAI,SACAuI,YACAC,kBACAC,QACAC,e,oBAKN,WACE,IAAQzP,EAAOhE,KAAKvE,MAAZuI,GACR,EAOIhE,KAAKyE,MANPkG,EADF,EACEA,OACAI,EAFF,EAEEA,OACAuI,EAHF,EAGEA,UACAC,EAJF,EAIEA,gBACAC,EALF,EAKEA,MACAC,EANF,EAMEA,QAGF,GAAe,OAAX9I,EAAiB,OAAO,KAE5B,QAAe1J,IAAX0J,EACF,OAAO,eAACzE,EAAA,EAAD,UAAW,eAAC9I,EAAA,EAAD,gCAEpB,QAAe6D,IAAX8J,EACF,OAAO,eAAC7E,EAAA,EAAD,UAAW,eAAC9I,EAAA,EAAD,gCAGpB,IAAMyW,EAAWzL,GAAauC,EAAO5P,MAAMuN,KAC3C,OACE,eAACpC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAC/I,EAAA,EAAD,UACE,eAACf,EAAA,EAAD,UACE,gBAACwK,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CAA4B5F,WAAW,aAAvC,SACE,eAAC8F,GAAA,EAAD,UACE,gBAACjG,EAAA,EAAD,CAAY3E,QAAQ,KAApB,UACE,gBAAC2S,GAAA,EAAD,CAAMxN,UAAWyN,IAAYC,GAAItE,GAAWH,EAAO0B,SAAnD,UACE,eAACyH,GAAA,EAAD,CAAe5B,SAAS,YACvB,CAAC,KACDvH,EAAO3I,QAET,IACD,eAAC4O,EAAA,EAAD,CAAShM,MAAOwD,GAAauC,EAAO5P,MAAMiH,KAAMiQ,OAAK,EAArD,SACE,eAAC4B,EAAD,CAAU3B,SAAS,UAAU,eAAa,EAAOQ,KAAK,MAAM,aAAYtK,GAAauC,EAAO5P,MAAMiH,KAAM,mBAAkB,SAE3H,IACD,wBAAM9E,MAAO,CAAE6W,WAAY,SAAUC,WAAY,QAAjD,UACGrJ,EAAOsJ,SACP,IACD,eAAC,GAAD,CAASrP,MAAO+F,EAAOuJ,oBACD,IAApBvJ,EAAOwJ,UAET,uCACG,UACA,IAFH,WAIG,IACD,eAAC,GAAD,CAASvP,MAAO+F,EAAOyJ,sBAGD,SAAtBzJ,EAAO0J,YAET,uCACG,UACA,IACAtM,GAAY4C,EAAO0J,YAAYpM,MAChC,eAAC,GAAD,CAASrD,MAAO+F,EAAO2J,iCAjCnB,eAyCd,eAACrN,GAAA,EAAD,CAA4B5F,WAAW,aAAvC,SACE,gBAAC8F,GAAA,EAAD,WACE,eAACjG,EAAA,EAAD,CAAY3E,QAAQ,KAApB,SACGwO,EAAO/I,OAET+I,EAAOzD,aAAe,+BAAMyD,EAAOzD,cACnCyD,EAAOwJ,SAAW,+BAAK,eAAC,GAAD,UAAcxJ,EAAOwJ,gBANnC,eAUd,gBAAC,GAAD,CAAqB3P,MAAM,WAAW6N,KAAM+B,KAA5C,UACGzJ,EAAOhQ,KACP,IACD,eAAC,GAAD,CAAS6J,MAAOmG,EAAO0J,iBAHX,QAMd,gBAAC,GAAD,CAA+B7P,MAAM,kBAAkB6N,KAAMiC,KAA7D,UACE,eAAC9D,EAAA,EAAD,CAAShM,MAAOuD,GAAY4C,EAAO4J,iBAAnC,SACE,gCAAO5J,EAAO4J,oBAEhB,eAAC,GAAD,CAAS/P,MAAOmG,EAAO6J,4BAJX,kBAOb7J,EAAO8J,SAER,gBAAC,GAAD,CAAuBjQ,MAAM,sBAAsB6N,KAAMqC,KAAzD,UACE,4DACC/J,EAAO8J,UAFI,UAMbrB,EAAMjT,OAAS,GAEhB,eAAC,GAAD,CAAsBqE,MAAM,QAAQ6N,KAAMsC,KAA1C,SACGvB,EAAMhW,KAAI,SAAC0S,GAAD,OAAO,+BAAkB4C,GAAQ5C,EAAElF,MAAlBkF,EAAElF,SADlB,SAKbyI,EAAQlT,OAAS,GAElB,eAAC,GAAD,CAAwBqE,MAAM,UAAU6N,KAAMuC,GAA9C,SACGvB,EAAQjW,KAAI,SAACuV,GAAD,OAAO,+BAAkBD,GAAQC,EAAE/H,MAAlB+H,EAAE/H,SADpB,WAKd,eAAC/D,GAAA,EAAD,UACE,eAAC/F,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,KAAnC,6BADY,aAIb+W,EAAU9V,KAAI,SAAC2H,GAAO,IAAD,EACd8P,EAAgBtJ,GAAS3H,EAAI,kDAAmD,CAACmB,EAAEyO,KACnFsB,EAAkBvJ,GAAS3H,EAAI,oDAAqD,CAACmB,EAAEyO,KAC7F,OACE,iCACE,gBAAC3M,GAAA,EAAD,CAAqB/J,MAAO,CAAE2I,QAAS,SAAvC,UACE,eAAC3E,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,KAAnC,SACG4I,EAAEnD,OAEJmD,EAAEoP,SAAW,+BAAK,eAAC,GAAD,UAAcpP,EAAEoP,cAJvB,QAOd,gBAAC,GAAD,CAAyB3P,MAAM,iBAAiB6N,KAAMiC,KAAtD,UACE,kCACG,UAACvP,EAAEgQ,oCAAH,QAAmC,GAAK,GACzC,uCACE,eAACvE,EAAA,EAAD,CAAShM,MAAK,wBAAmBO,EAAEgQ,8BAAnC,SACE,gCAAOlC,GAAS9N,EAAEgQ,kCAEnB,cAGFhQ,EAAEiQ,uBACF,IACD,uBAAMlY,MAAO,CAAEmY,QAAS,IAAxB,wBACClQ,EAAEmQ,0BACH,yDACcnQ,EAAEmQ,0BACd,uBAAMpY,MAAO,CAAEmY,QAAS,IAAxB,gCAIHlQ,EAAEoQ,wBACA,+BAAK,eAAC,GAAD,UAAcpQ,EAAEoQ,6BArBZ,aAwBI,QAAhB5K,EAAO5P,MAA4C,IAA1BoK,EAAEqQ,qBAA6BrQ,EAAEsQ,8BAE5D,gBAAC,GAAD,CAA4B7Q,MAAM,sBAAsB6N,KAAMiD,GAA9D,UAC6B,IAA1BvQ,EAAEqQ,oBACC,IAEA,2CAEE,+BAAMrQ,EAAEqQ,yBAGd,eAAC,GAAD,CAAS5Q,MAAOO,EAAEsQ,gCATN,eAad,eAAC,GAAD,CAAsB7Q,MAAM,uBAAuB6N,KAAMkD,KAAzD,SAC8B,QAA3BxQ,EAAEyQ,qBACC,YACAzQ,EAAEyQ,sBAHM,SAMd,gBAAC,GAAD,CAAsBhR,MAAM,QAAQ6N,KAAMoD,GAA1C,UACE,uCAEG,IACA1Q,EAAE2Q,SACF,IACA,WALH,MAOG,IACA3Q,EAAE4Q,SACF,IACA,WACA3N,GAAauC,EAAO5P,MAAMyN,MAC1B,KACArD,EAAE6Q,gBAEJ7Q,EAAE8Q,eAAiB,+BAAK,eAAC,GAAD,UAAc9Q,EAAE8Q,oBAhB7B,SAmBbhB,EAAc1U,OAAS,GAExB,eAAC,GAAD,CAAsBqE,MAAM,QAAQ6N,KAAMsC,KAA1C,SACGE,EAAczX,KAAI,SAAC0S,GAAD,OAAO,+BAAkB4C,GAAQ5C,EAAElF,MAAlBkF,EAAElF,SAD1B,SAKbkK,EAAgB3U,OAAS,GAE1B,eAAC,GAAD,CAAwBqE,MAAM,UAAU6N,KAAMuC,GAA9C,SACGE,EAAgB1X,KAAI,SAACuV,GAAD,OAAO,+BAAkBD,GAAQC,EAAE/H,MAAlB+H,EAAE/H,SAD5B,aAjFhB,YAAe7F,EAAEyO,QAyFrB,eAAC3M,GAAA,EAAD,UACE,eAAC/F,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,KAAnC,8BADY,mBAIbgX,EAAgB/V,KAAI,SAAC8N,GACpB,IAAM4K,EAAYvK,GAAS3H,EAAI,8DAA+D,CAACsH,EAAEsI,KAC3FuC,EAAcxK,GAAS3H,EAAI,gEAAiE,CAACsH,EAAEsI,KAC/FwC,EAAezK,GAAS3H,EAAI,0EAA2E,CAACsH,EAAEsI,KAC1GyC,EAAmB1K,GAAS3H,EAAI,oEAAqE,CAACsH,EAAEsI,KAC1G0C,EAA0B,CAC5BhL,EAAEiL,iCAAmC,YACrCjL,EAAEkL,8BAAgC,UAClCvN,OAAOwN,SAC8B,IAAnCH,EAAwB/V,SAAc+V,EAA0B,CAAC,SACrE,IAAMI,EAAkB,CAAE,EAAG,KAAM,EAAG,MAAOC,KAAM,WAEnD,OACE,iCACE,gBAAC1P,GAAA,EAAD,CAAiC/J,MAAO,CAAE2I,QAAS,SAAnD,UACE,eAAC3E,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,KAAnC,SACG+O,EAAEtJ,OAEJsJ,EAAEiJ,SAAW,+BAAK,eAAC,GAAD,UAAcjJ,EAAEiJ,cAJrC,YAAoBjJ,EAAEsI,GAAtB,UAOA,eAAC,GAAD,CAAqChP,MAAM,WAAW6N,KAAMmE,KAA5D,SACGtL,EAAEuL,UADL,YAAoBvL,EAAEsI,GAAtB,cAIA,eAAC,GAAD,CAAiChP,MAAM,yBAAyB6N,KAAM+B,KAAtE,SACGlJ,EAAEvQ,MADL,YAAoBuQ,EAAEsI,GAAtB,UAICwC,EAAa7V,OAAS,GAEvB,eAAC,GAAD,CAAqCqE,MAAM,6BAA6B6N,KAAMqE,KAA9E,SACGV,EAAa5Y,KAAI,SAACuZ,GAAD,OAAO,+BAAsBA,EAAEC,SAAdD,EAAEC,aADvC,YAAoB1L,EAAEsI,GAAtB,cAKCyC,EAAiB9V,OAAS,GAE3B,eAAC,GAAD,CAAiCqE,MAAM,oBAAoB6N,KAAMwE,KAAjE,SACGZ,EAAiB7Y,KAAI,SAACsK,GAAD,OAAO,+BAAyBA,EAAEoP,YAAjBpP,EAAEoP,gBAD3C,YAAoB5L,EAAEsI,GAAtB,UAKA,gBAAC,GAAD,CAAwChP,MAAM,wBAAwB6N,KAAM0E,KAA5E,UACE,8CAEG,IACAT,EAAgBpL,EAAEiL,iCACnB,eAAC,GAAD,CAAS3R,MAAO0G,EAAE8L,6CAEpB,2CAEG,IACAV,EAAgBpL,EAAEkL,8BACnB,eAAC,GAAD,CAAS5R,MAAO0G,EAAE+L,4CAXtB,YAAoB/L,EAAEsI,GAAtB,iBAmBCsC,EAAU3V,OAAS,GAEpB,eAAC,GAAD,CAAkCqE,MAAM,QAAQ6N,KAAMsC,KAAtD,SACGmB,EAAU1Y,KAAI,SAAC0S,GAAD,OAAO,+BAAkB4C,GAAQ5C,EAAElF,MAAlBkF,EAAElF,SADpC,YAAoBM,EAAEsI,GAAtB,WAKCuC,EAAY5V,OAAS,GAEtB,eAAC,GAAD,CAAoCqE,MAAM,UAAU6N,KAAMuC,GAA1D,SACGmB,EAAY3Y,KAAI,SAACuV,GAAD,OAAO,+BAAkBD,GAAQC,EAAE/H,MAAlB+H,EAAE/H,SADtC,YAAoBM,EAAEsI,GAAtB,eA1DF,YAAetI,EAAEsI,QAkErB,eAAC3M,GAAA,EAAD,UACE,gBAACE,GAAA,EAAD,WACE,eAACjG,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,KAAnC,wBACA,+BAAK,eAAC2S,GAAA,EAAD,CAAMxN,UAAWyN,IAAYC,GAAE,whBAAqfrE,EAAO6I,IAA3hB,mDACJ,QAJS,2B,GA1UD9X,IAAMiH,W,kDC7ClBuU,GAPA9P,GACb,uCACE,uBAAMM,EAAE,8NACR,uBAAMA,EAAE,yzBCoTGyP,G,kDApQb,WAAY9b,GAAQ,IAAD,8BACjB,cAAMA,IACDgJ,MAAQ,CACXkG,OAAQ,KACR6M,aAASvW,EACTwW,cAAUxW,EACVwS,aAASxS,EACTuS,WAAOvS,EACPyW,aAASzW,EACT0W,iBAAa1W,GATE,E,qDAanB,WACE,MAAgDjB,KAAKvE,MAA1BiY,EAA3B,EAAQV,MAAS/O,OAAUyP,SAAc1P,EAAzC,EAAyCA,GACnC2G,EAASgB,GAAS3H,EAAI,uCAAwC,CAAC0P,IAAW,GAChF,QAAezS,IAAX0J,EACFhQ,SAASiK,MAAQ,kCACjB5E,KAAK8E,SAAS,CAAE6F,YAAQ1J,QACnB,CACLtG,SAASiK,MAAT,UAAoB+F,EAAO3I,KAA3B,4BACA,IAAMwV,EAAU7L,GAAS3H,EAAI,gDAAiD,CAAC2G,EAAOiJ,KAChF6D,EAAW9L,GAAS3H,EAAI,iDAAkD,CAAC2G,EAAOiJ,KAClFJ,EAAQ7H,GAAS3H,EAAI,8CAA+C,CAAC2G,EAAOiJ,KAC5EH,EAAU9H,GAAS3H,EAAI,gDAAiD,CAAC2G,EAAOiJ,KAChF8D,EAAU/L,GAAS3H,EAAI,yCAA0C,CAAC2G,EAAOiJ,KACzE+D,EAAchM,GAAS3H,EAAI,wDAAyD,CAAC2G,EAAOiJ,KAClG5T,KAAK8E,SAAS,CACZ6F,SAAQ6M,UAASC,WAAUjE,QAAOC,UAASiE,UAASC,mB,oBAK1D,WAAU,IAAD,EACC3T,EAAOhE,KAAKvE,MAAZuI,GACR,EAEIhE,KAAKyE,MADPkG,EADF,EACEA,OAAQ6M,EADV,EACUA,QAASC,EADnB,EACmBA,SAAUjE,EAD7B,EAC6BA,MAAOC,EADpC,EACoCA,QAASiE,EAD7C,EAC6CA,QAASC,EADtD,EACsDA,YAGtD,GAAe,OAAXhN,EAAiB,OAAO,KAE5B,QAAe1J,IAAX0J,EACF,OAAO,eAACzE,EAAA,EAAD,UAAW,eAAC9I,EAAA,EAAD,gCAGpB,IAAMyW,EAAWzL,GAAauC,EAAO5P,MAAMuN,KAErCsP,EAAM,IAAIC,OAAO,cACjBC,EAAY,UAAGnN,EAAOoN,eAAV,aAAG,EAAgBC,MAAMJ,GAC3C,OACE,eAAC1R,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAC/I,EAAA,EAAD,UACE,eAACf,EAAA,EAAD,UACE,gBAACwK,GAAA,EAAD,WACE,eAACI,GAAA,EAAD,CAAqB5F,WAAW,aAAhC,SACE,gBAAC8F,GAAA,EAAD,WACE,gBAACjG,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,KAAnC,UACGoO,EAAO3I,KACP,KACD,eAAC4O,EAAA,EAAD,CAAShM,MAAOwD,GAAauC,EAAO5P,MAAMiH,KAAMiQ,OAAK,EAArD,SACE,eAAC4B,EAAD,CAAU3B,SAAS,QAAQ,eAAa,EAAOQ,KAAK,MAAM,aAAYtK,GAAauC,EAAO5P,MAAMiH,KAAM,mBAAkB,YAG3H2I,EAAOrD,aAAe,+BAAMqD,EAAOrD,cACnCqD,EAAO4J,SAAW,+BAAK,eAAC,GAAD,UAAc5J,EAAO4J,gBAVnC,QAcd,gBAAC,GAAD,CAAyB3P,MAAM,WAAW6N,KAAM+B,KAAhD,UACG7J,EAAOsJ,SACP,IAFH,QAIE,eAAC,GAAD,CAASrP,MAAO+F,EAAOuJ,qBAJX,aAOZvJ,EAAOwJ,UAAYxJ,EAAOyJ,mBAC5B,gBAAC,GAAD,CAAyBxP,MAAM,eAAe6N,KAAMwF,KAApD,UACGtN,EAAOwJ,SAAW,WAAa,YAChC,eAAC,GAAD,CAASvP,MAAO+F,EAAOyJ,qBAFX,YAKd,eAAC,GAAD,CAA2BxP,MAAM,uBAAuB6N,KAAMyF,GAA9D,SACGnQ,GAAY4C,EAAO0J,YAAYnM,MADpB,cAId,eAAC,GAAD,CAAqBtD,MAAM,OAAO6N,KAAM0F,KAAxC,SAEE,CACExN,EAAOyN,WACH,CAACzN,EAAOyN,WAAY,uBAAgBlb,MAAO,CAAEmY,QAAS,IAAlC,qBAAU,QAAkD,GACpF1K,EAAO0N,eACH,CAAC1N,EAAO0N,eAAgB,uBAAiBnb,MAAO,CAAEmY,QAAS,IAAnC,8BAAU,SAA4D,GAClG1K,EAAO2N,qBACH,CAAC3N,EAAO2N,qBAAsB,uBAAgBpb,MAAO,CAAEmY,QAAS,IAAlC,+BAAU,QAA4D,GACxG1K,EAAO4N,aACH,CAAC,8BAAmB5N,EAAO4N,cAAlB,YAAwC,IACrD/X,QAAO,SAACgY,EAAMC,GAEd,OAAKA,EAAKlY,OACLiY,EAAKjY,OACJ,GAAN,mBAAWiY,GAAX,CAAiB,WAAYC,IADJ,CAACA,GADDD,IAGxB,KAhBS,QAoBd,gBAAC,GAAD,CAA+B5T,MAAM,sBAAsB6N,KAAMiC,KAAjE,UACG/J,EAAO+N,eAEN,uCACE,+BAAK,gDACL,sBAAKxb,MAAO,CAAEyb,aAAc,QAA5B,SAAuChO,EAAO+N,oBAGhDjB,EAASlX,OAAS,GAAKoK,EAAOiO,mBAE9B,uCACE,+BAAK,kDACJjO,EAAOiO,kBACJ,+BAAK,eAAC,GAAD,UAAcjO,EAAOiO,qBAC7BnB,EAASja,KAAI,SAAC2H,GAAD,OACZ,iCACGA,EAAE0T,WACF,IACD,eAAC,GAAD,CAASjU,MAAOO,EAAEoP,YAHVpP,EAAE0T,oBAfN,kBAyBd,eAAC,GAAD,CAAwBjU,MAAM,UAAU6N,KAAMqG,KAA9C,SACGtB,EAAQha,KAAI,SAACc,GAAD,OAAO,+BAAmBA,EAAE0D,MAAX1D,EAAE0D,UADpB,YAIZ2I,EAAOoO,SAAWvF,EAAMjT,OAAS,IAEjC,gBAAC,GAAD,CAAsBqE,MAAM,QAAQ6N,KAAMsC,KAA1C,UAEIpK,EAAOoO,SAEP,+BACE,gBAAC7J,GAAA,EAAD,CAAMlU,KAAM2P,EAAOoO,QAAnB,sBAEGpO,EAAOoO,QAFV,QADQpO,EAAOoO,SASlBvF,EAAMhW,KAAI,SAAC0S,GAAD,OAAO,+BAAkB4C,GAAQ5C,EAAElF,MAAlBkF,EAAElF,UAblB,SAiBfyI,EAAQlT,OAAS,GAEhB,eAAC,GAAD,CAAwBqE,MAAM,UAAU6N,KAAMuC,GAA9C,SACGvB,EAAQjW,KAAI,SAACuV,GAAD,OAAO,+BAAkBD,GAAQC,EAAE/H,MAAlB+H,EAAE/H,SADpB,WAKfL,EAAOoN,SAEN,eAAC,GAAD,CAAwBnT,MAAM,UAAU6N,KAAMuG,KAA9C,SACE,+BACGlB,EAAata,KAAI,SAACyb,GACjB,GAAIrB,EAAIsB,KAAKD,GAAK,CAChB,IACMxZ,EADKwZ,EAAGvJ,QAAQ,IAAK,IACdA,QAAQ,IAAK,IAEpByJ,EADYxB,EAAYlY,EAAI,GACVuL,IACxB,OACE,eAACkE,GAAA,EAAD,CAAMlU,KAAMme,EAAZ,SACGF,IAIP,OAAOA,MAbDnB,IADE,WAoBhB,eAAC7Q,GAAA,EAAD,UACE,eAAC/F,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,KAAnC,sBADY,WAIbmb,EAAQla,KAAI,SAAC4b,GACZ,IAAMC,EAAkB1N,GAAS3H,EAAI,iHAAkH,CAACoV,EAAExF,KACpJ0F,EAAwB3N,GAAS3H,EAAI,uEAAwE,CAACoV,EAAExF,KAEtH,OACE,iCACE,gBAAC3M,GAAA,EAAD,CAAqB/J,MAAO,CAAE2I,QAAS,SAAvC,UACE,eAAC3E,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,KAAnC,SACE,eAAC2S,GAAA,EAAD,CAAMxN,UAAWyN,IAAYC,GAAItE,GAAWH,EAAO0B,QAAS+M,EAAE/M,SAA9D,SACG+M,EAAEpX,SAGNoX,EAAE9R,aAAe,+BAAM8R,EAAE9R,cACzB8R,EAAE7E,SAAW,+BAAK,eAAC,GAAD,UAAc6E,EAAE7E,cAPvB,QAUF,QAAX6E,EAAEre,OAAmBqe,EAAE3E,cAEtB,gBAAC,GAAD,CAAqB7P,MAAM,WAAW6N,KAAM+B,KAA5C,UACG4E,EAAEre,KACF,IACD,eAAC,GAAD,CAAS6J,MAAOwU,EAAE3E,iBAHN,QAOhB,gBAAC,GAAD,CAA+B7P,MAAM,kBAAkB6N,KAAMiC,KAA7D,UACE,eAAC9D,EAAA,EAAD,CAAShM,MAAOuD,GAAYiR,EAAEzE,iBAA9B,SACE,gCAAOyE,EAAEzE,oBAEX,eAAC,GAAD,CAAS/P,MAAOwU,EAAExE,4BAJN,kBAObwE,EAAEvE,SACH,gBAAC,GAAD,CAAuBjQ,MAAM,sBAAsB6N,KAAMqC,KAAzD,UACE,4DACCsE,EAAEvE,UAFS,UAMd,eAAC,GAAD,CAA0BjQ,MAAM,iBAAiB6N,KAAM8G,KAAvD,SACGF,EAAgB7b,KAAI,SAAC2H,GAAD,aACnB,iCACGA,EAAEnD,KACF,KACA,UAACmD,EAAEgQ,oCAAH,QAAmC,GAAK,GAEvC,eAACvE,EAAA,EAAD,CAAShM,MAAK,wBAAmBO,EAAEgQ,8BAAnC,SACE,sCAEGlC,GAAS9N,EAAEgQ,8BAFd,WANIhQ,EAAEnD,UAFF,aAmBd,eAAC,GAAD,CAAgC4C,MAAM,kBAAkB6N,KAAMwE,KAA9D,SACGqC,EAAsB9b,KAAI,SAAC8N,GAAD,OAAO,+BAAmBA,EAAEtJ,MAAXsJ,EAAEtJ,UADlC,qBArDhB,iBAAoBoX,EAAExF,qB,GAhMb9X,IAAMiH,WC3ClByW,GAPMhS,GACnB,uCACE,uBAAMM,EAAE,4rDACR,uBAAMA,EAAE,iJCcZ,SAAS2R,GAAT,GAA4C,IAApB7U,EAAmB,EAAnBA,MAAOhF,EAAY,EAAZA,SAC7B,OAAQgF,GAAmB,KAAVA,EAAgB,eAACgM,EAAA,EAAD,CAAShM,MAAOA,EAAhB,SAAwBhF,IAAsBA,EAQjF6Z,GAAazW,aAAe,CAC1B4B,MAAO,IAiEM8U,OA9Df,SAAoBje,GAClB,IAAQke,EAAgBle,EAAhBke,QAAS3V,EAAOvI,EAAPuI,GAEXjJ,EAAOqN,GAAauR,GAE1B,OACE,uCACE,gBAACzY,EAAA,EAAD,CAAYQ,UAAU,KAAKnF,QAAQ,KAAnC,UACGxB,EAAKiH,KADR,IAGG,KACD,eAACjH,EAAKuN,KAAN,CAAW4J,SAAS,UAAUhV,MAAO,CAAEyb,cAAe,QAExD,eAAC9R,GAAA,EAAD,UACG8E,GAAS3H,EAZH,wEAYa,CAAC2V,IAAUnc,KAAI,SAACuV,GAAD,OACjC,eAAC9L,GAAA,EAAD,CAA0C/J,MAAO,CAAE0c,YAAa,GAAhE,SACE,gBAACzS,GAAA,EAAD,WACE,gBAACjG,EAAA,EAAD,CAAY3E,QAAQ,KAApB,UACE,eAAC2S,GAAA,EAAD,CAAMxN,UAAWyN,IAAYC,GAAItE,GAAWiI,EAAE1G,SAA9C,SACG0G,EAAE/Q,OAEH+Q,EAAEgG,SAAW,CACb,IACA,eAAC7J,GAAA,EAAD,CACElU,KAAM+X,EAAEgG,QACR3c,OAAO,SACPyd,IAAI,WACJjV,MAAM,UAJR,SAME,eAAC,GAAD,CAAkB1H,MAAO,CAAEgV,SAAU,OAAQyG,cAAe,EAAG3E,WAAY,gBAIjF,yBAAO9W,MAAO,CAAE4c,WAAY,GAA5B,UACE,eAACL,GAAD,CAAc7U,MAAOmO,EAAEmB,iBAAvB,SACE,gCAAOnB,EAAEkB,aAEO,SAAjBlB,EAAEsB,YACH,uCACG,WACD,eAACoF,GAAD,CAAc7U,MAAOmO,EAAEuB,mBAAvB,SACE,gCAAOvM,GAAYgL,EAAEsB,YAAYpM,aAIpC8K,EAAEzL,aAAe,WAClB,8BAAKyL,EAAEzL,qBA/Bb,UAAkBqS,EAAlB,YAA6B5G,EAAE1G,mBCN1B0N,OAzBf,SAAwBte,GACtB0H,qBAAU,WACRxI,SAASiK,MAAQ,2BAChB,IAEH,IAAQZ,EAAOvI,EAAPuI,GACR,OACE,eAACkC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAChF,EAAA,EAAD,CAAMI,WAAS,EAACsP,QAAQ,SAASvP,QAAS,EAA1C,SACGwF,OAAOC,KAAKqB,IAAc5K,KAAI,SAACmc,GAAD,OAC7B,eAACxY,EAAA,EAAD,CAAoBK,MAAI,EAACsP,IAAE,EAA3B,SACE,eAAC1T,EAAA,EAAD,UACE,eAACf,EAAA,EAAD,CAAK8I,EAAG,EAAR,SACE,eAAC,GAAD,CAAYnB,GAAIA,EAAI2V,QAASA,SAHxBA,WCQNK,OArBf,YAAqC,IAAPhW,EAAM,EAANA,GAC5B,OACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOiW,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAM,eAAC,GAAD,CAAgBnW,GAAIA,OAC9D,eAAC,IAAD,CACEiW,OAAK,EACLC,KAAK,oBACLC,OAAQ,SAAC1e,GAAD,OAAW,eAAC,GAAD,aAAcuI,GAAIA,GAAQvI,OAE/C,eAAC,IAAD,CACEwe,OAAK,EACLC,KAAK,8BACLC,OAAQ,SAAC1e,GAAD,OAAW,eAAC,GAAD,aAAcuI,GAAIA,GAAQvI,OAE/C,eAAC,IAAD,CAAO0e,OAAQ,kBAAM,eAAC,IAAD,CAAU/K,GAAG,aC5BzB,OAA0B,uCC4F1BgL,OAxEf,YAA0B,IAAPpW,EAAM,EAANA,GAKjB,OAJAb,qBAAU,WACRxI,SAASiK,MAAQ,mBAChB,IAGD,gBAACsB,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,sBACEjJ,MAAO,CACLmd,SAAU,WACVC,KAAM,GACNhY,IAAK,GACL+S,QAAS,IACTkF,UAAW,YACXpd,gBAAiB,YAEnBqd,IAAKC,GACLC,IAAI,KAGN,eAACtd,EAAA,EAAD,UACE,gBAACf,EAAA,EAAD,CAAK8I,EAAG,EAAR,UACE,eAACjE,EAAA,EAAD,CAAY3E,QAAQ,KAAKmF,UAAU,KAAKiZ,cAAY,EAApD,sBACA,gBAACzZ,EAAA,EAAD,CAAY0Z,WAAS,EAArB,sDAEG,IACD,eAAC1L,GAAA,EAAD,CAAMlU,KAAK,qCAAX,gDAHF,wFAMA,gBAACkG,EAAA,EAAD,CAAY0Z,WAAS,EAArB,mCAEG,IACD,eAAC1L,GAAA,EAAD,CAAMlU,KAAK,uBAAX,mBACC,IAJH,gDAMG,IACD,eAACkU,GAAA,EAAD,CAAMlU,KAAK,0BAAX,oBACC,IARH,oBAUG,IACD,eAACkU,GAAA,EAAD,CAAMlU,KAAK,cAAX,kBAXF,iDAcA,gBAACkG,EAAA,EAAD,CAAY0Z,WAAS,EAArB,mDAEG,IACD,eAAC1L,GAAA,EAAD,CAAMlU,KAAK,+CAAX,kBACC,IAJH,kBAQA,eAACkG,EAAA,EAAD,CAAY3E,QAAQ,KAAKmF,UAAU,KAAKQ,MAAM,SAAS2Y,GAAI,EAA3D,+BACA,gBAAC1Z,EAAA,EAAD,CAAMI,WAAS,EAAf,UACE,eAACJ,EAAA,EAAD,CAAMK,MAAI,EAACsP,IAAE,EAAb,SACE,eAACzU,EAAA,EAAD,CAAK8I,EAAG,EAAR,SACE,eAAC,GAAD,CAAYnB,GAAIA,EAAI2V,QAAQ,WAFd,OAKlB,eAACxY,EAAA,EAAD,CAAMK,MAAI,EAACsP,IAAE,EAAb,SACE,eAACzU,EAAA,EAAD,CAAK8I,EAAG,EAAR,SACE,eAAC,GAAD,CAAYnB,GAAIA,EAAI2V,QAAQ,WAFd,mBC9Ef,OAA0B,iCC+BnCmB,GAAeC,cAoBrB,IAAM7V,GAAW,SAAC8B,GAAD,iBAAaA,IAGxBJ,GAAQ,CACZ,GAAI,CACF5E,KAAM,eACNsF,YAAa,oCACb0T,KAAMZ,IAERa,QAAS,CACPjZ,KAAM,mBACNsF,YAAa,mEACb0T,KAAMjX,IAERmX,OAAQ,CACNlZ,KAAM,iBACNsF,YAAa,kCACbC,SAAS,EACTyT,KAAMhB,IAERmB,WAAY,CACVnZ,KAAM,oBACNsF,YAAa,gEACb0T,KAAMtN,KAIV,SAAS0N,KACP,OAAO,eAAC/e,EAAA,EAAD,CAAKwJ,QAAQ,OAAOC,eAAe,SAAnC,SAA4C,eAACuV,EAAA,EAAD,M,IAsJtCC,G,kDAxIb,WAAY7f,GAAQ,IAAD,8BACjB,cAAMA,IACDgJ,MAAQ,CACX8W,QAAS,QACTvX,GAAI,KACJwX,YAAY,GAEd,EAAKC,SAAW,KAPC,E,qDAUnB,WAAqB,IAAD,OAIlBC,MACGC,MAAK,SAACC,GAAD,OAAS,EAAKC,aAAaD,MAChCE,OAAM,SAAC9d,GAAD,OAAS,EAAK8G,SAAS,CAAEJ,MAAO1G,OAEzC,IAAQoG,EAAYpE,KAAKvE,MAAjB2I,QAERpE,KAAKyb,SAAWrX,EAAQ2X,QAAO,WAC7BhM,OAAOiM,SAAS,EAAG,Q,kCAIvB,WACEhc,KAAKyb,WACUzb,KAAKyE,MAAZT,GACLiY,U,0BAGL,SAAaL,GAAM,IAAD,OACVM,EAAM,IAAIC,eAChBD,EAAIvgB,KAAK,MAAO,qBAAqB,GACrCugB,EAAIE,aAAe,cAEnBF,EAAIG,OAAS,WACX,IAAMC,EAAa,IAAIC,WAAWL,EAAIM,UACtC,EAAK1X,SAAS,CAAEd,GAAI,IAAI4X,EAAIa,SAASH,MAEvCJ,EAAIQ,S,wBAGN,SAAW1B,GACWhb,KAAKvE,MAAjB2I,QACAa,KAAK,CACXC,SAAUA,GAAS8V,KAErBhb,KAAK8E,SAAS,CAAE0W,YAAY,M,yBAG9B,WACE,IAAQD,EAAYvb,KAAKyE,MAAjB8W,QACRvb,KAAK8E,SAAS,CAAEyW,QAAsB,UAAZA,EAAuB,OAAS,Y,oBAG5D,WAAU,IAKJ/gB,EA1HUO,EAqHP,OACCqJ,EAAYpE,KAAKvE,MAAjB2I,QACR,EAEIpE,KAAKyE,MADPT,EADF,EACEA,GAAIU,EADN,EACMA,MAAO8W,EADb,EACaA,WAAYD,EADzB,EACyBA,QA8BzB,OA1BE/gB,EADEwJ,EAEA,eAAC7C,EAAA,EAAD,CAAMI,WAAS,EAACC,MAAI,EAApB,SACE,gBAAC,IAAD,WAEIsF,OAAOC,KAAKH,IAAOpJ,KAAI,SAACwJ,GAAD,OACrB,eAAC,IAAD,CAEEiT,OAAQnT,OAAO6V,UAAUC,eAAeC,KAAKjW,GAAMI,GAAM,WACzDkT,KAAMhV,GAAS8B,GACfmT,OACE,SAAC1e,GAAD,OAAWK,IAAMlB,cAAcgM,GAAMI,GAAKgU,KAA/B,aACThU,IAAI,GAAD,OAAKA,EAAL,YAAY5C,EAAQC,SAASC,QAAUN,MAAOvI,MALhDuL,MAWX,eAAC,IAAD,CAAOmT,OAAQ,kBAAM,eAAC,IAAD,CAAU/K,GAAG,cAI/B1K,EACC,iDAEA,eAAC0W,GAAD,IAGV,eAAC0B,EAAA,EAAD,CAAsBC,aAAW,EAAjC,SACE,gBAACC,EAAA,EAAD,CAAeve,OAxJL1D,EAwJqBwgB,EAvJ9BR,YAAY,CACjBkC,WAAY,CACVC,gBAAiB,CACfC,eAAgB,CACd9T,KAAM,CACJ,iBAAkB,CAChBtD,MAAO+U,GAAanc,QAAQye,OAAOpX,cAM7CrH,QAAS,CACPC,KAAM7D,MA0IJ,UACE,eAACsiB,EAAA,EAAD,IACA,gBAAChhB,EAAA,EAAD,CAAK8I,EAAG,EAAR,UACE,gBAAChE,EAAA,EAAD,CAAMI,WAAS,EAACH,UAAU,SAASE,QAAS,EAA5C,UACE,eAACH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACnF,EAAA,EAAD,CAAKwJ,QAAQ,OAAOC,eAAe,SAAnC,SACE,eAAC,IAAD,CAAMsJ,GAAG,IAAT,SACE,sBAAKoL,IAAK8C,GAAMC,MAAM,QAAQC,OAAO,UAAU9C,IAAI,eAIxDlgB,EACD,eAAC2G,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0E,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAC/I,EAAA,EAAD,UACE,eAACf,EAAA,EAAD,CAAK8I,EAAG,EAAGU,QAAQ,OAAOxE,WAAW,SAASyE,eAAe,SAA7D,SACE,eAAC8K,EAAA,EAAD,CAAShM,MAAK,oBAA4B,UAAZ2W,EAAuB,OAAS,QAAhD,UAAd,SACE,eAACkC,EAAA,EAAD,CAAYhhB,QAAS,kBAAM,EAAKihB,eAAexS,KAAK,QAApD,SACgB,UAAZqQ,EAAuB,eAAC,IAAD,IAAe,eAAC,IAAD,mBAQtD,eAACkC,EAAA,EAAD,CACEvgB,MAAO,CAAEmd,SAAU,WAAY/X,IAAK,EAAGgY,KAAM,GAC7C7d,QAAS,kBAAM,EAAKqI,SAAS,CAAE0W,YAAY,KAC3CtQ,KAAK,QAHP,SAKE,eAACyS,EAAA,EAAD,SAGJ,eAACC,EAAA,EAAD,CAAQC,OAAO,OAAOliB,KAAM6f,EAAYsC,QAAS,kBAAM,EAAKhZ,SAAS,CAAE0W,YAAY,KAAnF,SACE,eAAC,GAAD,CAAY/e,QAAS,SAACue,GAAD,OAAU,EAAK+C,WAAW/C,IAAOpU,MAAOA,gB,GA/HvD9K,IAAMiH,WCtFlBib,GAAgBC,YAAW3C,IACjC4C,IAAS/D,OACP,eAAC,IAAMgE,WAAP,UACE,eAAC,IAAD,CAAQC,SAAS,QAAjB,SACE,eAACJ,GAAD,QAGJrjB,SAAS0jB,eAAe,W","file":"static/js/main.53249094.chunk.js","sourcesContent":["import {\n  Box,\n  Button,\n  ClickAwayListener,\n  Grow,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport genCSV from 'csv-stringify';\n\nconst propTypes = {\n  queryResult: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    values: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n  }).isRequired,\n};\n\nconst options = ['.csv', '.json'];\n\nfunction startDownload(content, filename) {\n  const element = document.createElement('a');\n  const file = new Blob([content], { type: 'text/plain;charset=utf-8' });\n  element.href = URL.createObjectURL(file);\n  element.download = filename;\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\nfunction DownloadTableButton(props) {\n  const [open, setOpen] = useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    const { queryResult } = props;\n    if (index === 0) {\n      genCSV([queryResult.columns, ...queryResult.values], (err, output) => {\n        startDownload(output, 'data.csv');\n      });\n    } else if (index === 1) {\n      startDownload(JSON.stringify(queryResult, null, 2), 'data.json');\n    }\n    setOpen(false);\n  };\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" ref={anchorRef} onClick={handleToggle}>Download as ...</Button>\n      <Popper open={open} anchorEl={anchorRef.current} transition disablePortal>\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </Box>\n  );\n}\nDownloadTableButton.propTypes = propTypes;\n\nexport default DownloadTableButton;\n","import {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Typography,\n} from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport md5 from 'md5';\nimport withStyles from '@mui/styles/withStyles';\n\nimport DownloadTableButton from './DownloadTableButton';\n\nconst propTypes = {\n  formatFunctions: PropTypes.arrayOf(PropTypes.func),\n  headers: PropTypes.arrayOf(PropTypes.string.isRequired),\n  headerSpans: PropTypes.arrayOf(PropTypes.number.isRequired),\n  onChangeOrder: PropTypes.func,\n  orderBy: PropTypes.number,\n  order: PropTypes.oneOf(['asc', 'desc']),\n  queryResult: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    values: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n  }),\n};\n\nconst defaultProps = {\n  formatFunctions: null,\n  headers: [],\n  headerSpans: [],\n  onChangeOrder: null,\n  order: 'asc',\n  orderBy: null,\n  queryResult: null,\n};\n\n// Variables for coloring properly\nfunction styleTableCell(a, b) {\n  return withStyles((theme) => {\n    const cellBgColors = (theme.palette.mode === 'dark') ? [\n      ['#303030', '#414141'],\n      ['#3a3a3a', '#575757'],\n    ] : [\n      ['#ffffff', '#eeeeee'],\n      ['#f5f5f5', '#d8d8d8'],\n    ];\n    return {\n      head: {\n        backgroundColor: cellBgColors[a][b],\n      },\n      body: {\n        backgroundColor: cellBgColors[a][b],\n      },\n    };\n  })(TableCell);\n}\nconst styledCells = [0, 1].map((a) => ([0, 1].map((b) => styleTableCell(a, b))));\n\nfunction comparator(a, b, orderBy, isAsc) {\n  let x = a[orderBy];\n  let y = b[orderBy];\n  if (React.isValidElement(x)) x = x.props.children;\n  if (React.isValidElement(y)) y = y.props.children;\n  if (y < x) {\n    return isAsc ? 1 : -1;\n  }\n  if (y > x) {\n    return isAsc ? -1 : 1;\n  }\n  return 0;\n}\n\nfunction sortedRows(array, orderBy, isAsc) {\n  const indexedRows = array.map((row, index) => [row, index]);\n  if (orderBy === null) return indexedRows;\n  indexedRows.sort((a, b) => {\n    const order = comparator(a[0], b[0], orderBy, isAsc);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return indexedRows;\n}\n\nclass QueryTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.resultHash = 'null';\n  }\n\n  componentDidUpdate() {\n    const { queryResult } = this.props;\n    this.resultHash = (queryResult) ? md5(JSON.stringify(queryResult)) : 'null';\n  }\n\n  handleRequestSort(property) {\n    const { onChangeOrder, orderBy, order } = this.props;\n    if (!onChangeOrder) { return; }\n    const isAsc = orderBy === property && order === 'asc';\n    onChangeOrder(isAsc ? 'desc' : 'asc', property);\n  }\n\n  createKey(str) {\n    return this.resultHash + str;\n  }\n\n  headerModVal(idx) {\n    const { headerSpans } = this.props;\n    if (!headerSpans.length) return 0;\n    const headerPositions = headerSpans.reduce(\n      (prev, cur) => prev.concat([cur + prev[prev.length - 1]]),\n      [0],\n    );\n    return (headerPositions.findIndex((e) => idx < e) - 1) % 2;\n  }\n\n  render() {\n    const {\n      queryResult, formatFunctions, headers, headerSpans, order, orderBy,\n    } = this.props;\n    if (headerSpans.length !== headers.length) { throw new Error('A span needs to be specified for each header.'); }\n    if (queryResult === undefined) return <Typography>No results</Typography>;\n    if (!queryResult) return null;\n    return (\n      <Grid direction=\"column\" alignItems=\"flex-end\" spacing={1} container>\n        <Grid container item>\n          <TableContainer component={Paper} style={{ maxHeight: 850 }}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                {\n                  headers.length > 0 && (\n                    <TableRow>\n                      {\n                          headers.map((name, idx) => {\n                            const StyledTableCell = styledCells[1][idx % 2];\n                            return (\n                              <StyledTableCell\n                                key={name}\n                                align=\"center\"\n                                colSpan={headerSpans[idx]}\n                              >\n                                {name}\n                              </StyledTableCell>\n                            );\n                          })\n                        }\n                    </TableRow>\n                  )\n                }\n                <TableRow>\n                  {\n                    queryResult.columns.map((column, idx) => {\n                      const StyledTableCell = styledCells[1][this.headerModVal(idx)];\n                      return (\n                        <StyledTableCell\n                          key={this.createKey(column + idx)}\n                          style={{\n                            top: headers.length > 0 ? 57 : 0, // So headers don't collapse on scroll\n                          }}\n                        >\n                          <TableSortLabel\n                            active={orderBy === idx}\n                            direction={orderBy === idx ? order : 'asc'}\n                            onClick={() => this.handleRequestSort(idx)}\n                          >\n                            {column}\n                          </TableSortLabel>\n                        </StyledTableCell>\n                      );\n                    })\n                  }\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  sortedRows(queryResult.values, orderBy, order === 'asc').map(\n                    (row, idx) => (\n                      <TableRow key={this.createKey(row[1])}>\n                        {\n                          row[0].map(\n                            (val, j) => {\n                              let value = val;\n                              if (formatFunctions && formatFunctions[j]) {\n                                value = formatFunctions[j](val);\n                              }\n                              const StyledTableCell = styledCells[idx % 2][this.headerModVal(j)];\n                              return (\n                                <StyledTableCell\n                                  key={this.createKey(`${row[1]}-${j}`)}\n                                >\n                                  {value}\n                                </StyledTableCell>\n                              );\n                            },\n                          )\n                        }\n                      </TableRow>\n                    ),\n                  )\n                }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item><DownloadTableButton queryResult={queryResult} /></Grid>\n      </Grid>\n    );\n  }\n}\n\nQueryTable.propTypes = propTypes;\nQueryTable.defaultProps = defaultProps;\n\nexport default QueryTable;\n","export default __webpack_public_path__ + \"static/media/tables.8e422b11.svg\";","import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  TextField,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { GlassMagnifier } from 'react-image-magnifiers';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport qs from 'query-string';\n\nimport QueryTable from '../components/QueryTable';\nimport diagramImage from '../tables.svg';\n\n// As suggested in https://github.com/mui-org/material-ui/issues/1594#issuecomment-272547735\nfunction AutoFocusTextField(props) {\n  const inputRef = React.useRef();\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      inputRef.current.focus();\n    }, 100);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return <TextField inputRef={inputRef} {...props} />;\n}\n\nfunction DatabaseDiagram() {\n  return (\n    <GlassMagnifier\n      imageSrc={diagramImage}\n      square\n      magnifierSize=\"25%\"\n      allowOverflow\n    />\n  );\n}\n\nclass CustomSQLQuery extends React.Component {\n  constructor(props) {\n    super();\n    this.db = props.db;\n    this.params = qs.parse(props.history.location.search);\n    const sqlInput = ('query' in this.params) ? this.params.query : '';\n\n    this.state = {\n      sqlInput,\n      order: 'asc',\n      orderBy: null,\n      queryResult: null,\n      error: null,\n      queryProcessing: false,\n    };\n  }\n\n  componentDidMount() {\n    const { sqlInput } = this.state;\n    document.title = 'Custom SQL Query - pqdb';\n    if (sqlInput === '') return;\n\n    const sqlQuery = sqlInput;\n    this.setState({ queryProcessing: true });\n    setTimeout(\n      () => {\n        try {\n          const results = this.db.exec(sqlQuery)[0];\n          this.setState({ queryResult: results, error: null, queryProcessing: false });\n        } catch (error) {\n          this.setState({ queryResult: null, error, queryProcessing: false });\n        }\n      },\n      0,\n    );\n  }\n\n  executeSQLQuery() {\n    const { history } = this.props;\n    const { sqlInput } = this.state;\n    this.params.query = sqlInput;\n    const search = `?${qs.stringify(this.params)}`;\n    if (history.location.search !== search) {\n      history.push({\n        pathname: history.location.pathname,\n        search,\n      });\n    }\n  }\n\n  render() {\n    const {\n      error, order, orderBy, queryProcessing, queryResult, sqlInput,\n    } = this.state;\n    return (\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item>\n          <Paper>\n            <Box p={2}>\n              <Grid container direction=\"column\" spacing={3}>\n                <Grid item>\n                  <AutoFocusTextField\n                    label=\"SQL Query\"\n                    multiline\n                    fullWidth\n                    margin=\"normal\"\n                    rows={6}\n                    rowsMax={100}\n                    variant=\"outlined\"\n                    error={error != null}\n                    helperText={error ? error.toString() : ''}\n                    value={sqlInput}\n                    onChange={(e) => this.setState({ sqlInput: e.target.value })}\n                  />\n                </Grid>\n                <Grid item>\n                  <Box display=\"flex\" justifyContent=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={queryProcessing}\n                      onClick={() => this.executeSQLQuery()}\n                    >\n                      {(queryProcessing) ? 'Computing...' : 'Run Query'}\n                    </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid container item>\n          <Container maxWidth={false} disableGutters>\n            <Accordion>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                Database Diagram\n              </AccordionSummary>\n              <AccordionDetails>\n                <DatabaseDiagram />\n              </AccordionDetails>\n            </Accordion>\n          </Container>\n        </Grid>\n        <Grid container item>\n          <Container maxWidth={false} disableGutters>\n            <Paper>\n              <Box p={2} display=\"flex\" justifyContent=\"center\">\n                <QueryTable\n                  queryResult={queryResult}\n                  order={order}\n                  orderBy={orderBy}\n                  onChangeOrder={(newOrder, newOrderBy) => this.setState({\n                    order: newOrder, orderBy: newOrderBy,\n                  })}\n                />\n              </Box>\n            </Paper>\n          </Container>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nCustomSQLQuery.propTypes = {\n  db: PropTypes.shape({\n    exec: PropTypes.func.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default CustomSQLQuery;\n","import {\n  List,\n  ListItem,\n  ListItemText,\n} from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst defaultProps = {\n  views: { routing: false },\n};\nconst propTypes = {\n  onClick: PropTypes.func.isRequired,\n  views: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    view: PropTypes.elementType.isRequired,\n    routing: PropTypes.bool,\n  }),\n};\n\nfunction DrawerList({ views, onClick }) {\n  return (\n    <List>\n      {\n        Object.keys(views).map((key) => (\n          <ListItem key={key} button onClick={() => onClick(key)}>\n            <ListItemText primary={views[key].name} secondary={views[key].description} />\n          </ListItem>\n        ))\n      }\n    </List>\n  );\n}\n\nDrawerList.defaultProps = defaultProps;\nDrawerList.propTypes = propTypes;\n\nexport default DrawerList;\n","import React from 'react';\nimport { SvgIcon } from '@mui/material';\n\nexport default function makeSvgIcon(code) {\n  function forwardRef(props, ref) {\n    return (\n      <SvgIcon ref={ref} {...props}>\n        {code}\n      </SvgIcon>\n    );\n  }\n  forwardRef.displayName = 'SvgIconWrapper';\n  return React.forwardRef(forwardRef);\n}\n","import React from 'react';\nimport makeSvgIcon from '../utils/makeSvgIcon';\n\nconst Seal = makeSvgIcon(\n  <>\n    <path d=\"m 17.909941,12.501539 a 0.6251406,0.6251406 0 0 0 -0.509414,0.863789 l 2.347735,5.788124 -2.901446,-0.937618 a 0.6251406,0.6251406 0 0 0 -0.745664,0.310079 l -1.306757,2.554452 -2.192696,-5.404218 a 0.6251406,0.6251406 0 0 0 -1.188633,0.08121 0.6251406,0.6251406 0 0 0 -0.13289,0.206719 L 9.2056057,21.072982 7.898848,18.525913 A 0.6251406,0.6251406 0 0 0 7.1531836,18.215834 l -2.9014452,0.937618 2.1557812,-5.300858 a 0.62585392,0.62585392 0 1 0 -1.1591014,-0.4725 l -2.6578126,6.541169 a 0.6251406,0.6251406 0 0 0 0.7751953,0.826875 l 3.661875,-1.181249 1.690664,3.285351 a 0.6251406,0.6251406 0 0 0 1.1369533,-0.0443 l 2.1410158,-5.28609 2.148398,5.286093 a 0.6251406,0.6251406 0 0 0 1.136954,0.0443 l 1.690663,-3.285351 3.661875,1.181249 a 0.6251406,0.6251406 0 0 0 0.775195,-0.826875 L 18.559629,12.90021 a 0.6251406,0.6251406 0 0 0 -0.649688,-0.398671 z\" />\n    <path d=\"M 9.5629336,0.64810921 C 9.4494883,0.63094421 9.3372676,0.63583221 9.2269559,0.66959521 8.3441634,0.94028141 8.4463413,2.7848847 7.6935611,3.3144569 6.9406319,3.8443191 5.2126518,3.1430394 4.6638839,3.878982 4.1152853,4.6146479 5.2906911,6.0602738 4.9998631,6.9301447 4.708861,7.8004712 2.9030818,8.2369932 2.8980382,9.1569854 c -0.00431,0.9185526 1.7943666,1.4110016 2.0764313,2.2893496 0.2816274,0.879215 -0.9075308,2.288154 -0.3672334,3.041396 0.5410196,0.751794 2.2796072,0.09913 3.0238155,0.656331 0.7470554,0.551566 0.6269584,2.392651 1.5060477,2.691742 0.8797327,0.297784 1.8904307,-1.24546 2.8167577,-1.230622 0.929969,0.0076 1.922538,1.580818 2.805038,1.310711 l -0.0059,0.01368 c 0.882807,-0.27069 0.780614,-2.117255 1.533394,-2.646827 0.752125,-0.528271 2.480908,0.173372 3.029675,-0.56257 0.548672,-0.73581 -0.624853,-2.181291 -0.334026,-3.051163 0.291003,-0.870327 2.094843,-1.306841 2.099872,-2.2268409 C 21.08621,8.523624 19.287543,8.0292212 19.005478,7.1508739 18.72382,6.2718055 19.91378,4.8632308 19.372753,4.1114326 18.831734,3.3596382 17.093147,4.0122966 16.348938,3.4551005 15.601882,2.9035348 15.721964,1.062442 14.842891,0.76335801 13.963156,0.46557211 12.953189,2.0054205 12.026132,1.9920271 11.21879,1.9727291 10.357052,0.76827131 9.5629336,0.64810921 Z M 11.973391,3.7461527 c 3.134561,0 5.692117,2.5575526 5.692117,5.6921175 1e-6,3.1345658 -2.557556,5.6862578 -5.692117,5.6862578 -3.1345602,0 -5.684304,-2.551692 -5.684304,-5.6862578 0,-3.1345649 2.5497438,-5.6921175 5.684304,-5.6921175 z m 0,1.0040315 c -2.5940527,0 -4.6802722,2.0940233 -4.6802722,4.688086 -3e-7,2.5940248 2.0862195,4.6822268 4.6802722,4.6822268 2.594053,0 4.688086,-2.088202 4.688086,-4.6822268 0,-2.5940627 -2.094033,-4.688086 -4.688086,-4.688086 z\" />\n  </>,\n);\n\nexport default Seal;\n","import EncryptionIcon from '@mui/icons-material/LockOutlined';\nimport SealIcon from './icons/Seal';\n\nconst NIST_ROUNDS = {\n  none: { short: null, long: 'Not submitted to the NIST standardization' },\n  1: { short: 'round 1', long: 'Reached Round 1 of the NIST standardization' },\n  2: { short: 'round 2', long: 'Reached Round 2 of the NIST standardization' },\n  '3a': { short: 'round 3 alternate', long: 'Alternate Candidate in Round 3 of the NIST standardization' },\n  '3f': { short: 'round 3 finalist', long: 'Finalist in Round 3 of the NIST standardization' },\n};\n\nconst SEC_NOTIONS = {\n  'IND-CCA': 'Indistinguishability under an adaptive Chosen Ciphertext Attack',\n  'IND-CPA': 'Indistinguishability under an adaptive Chosen Plaintext Attack',\n  'EUF-CMA': 'Existential Unforgeability under a Chosen Message Attack',\n  'SUF-CMA': 'Strong Existential Unforgeability under a Chosen Message Attack',\n};\n\nconst SCHEME_TYPES = {\n  enc: {\n    name: 'Key Exchange Scheme',\n    icon: EncryptionIcon,\n    ctsig: 'ct',\n    ct_sig: 'Ciphertext',\n    encsign: 'enc',\n    enc_sign: 'Encrypt',\n    decvrfy: 'dec',\n    dec_vrfy: 'Decrypt',\n  },\n  sig: {\n    name: 'Signature Scheme',\n    icon: SealIcon,\n    ctsig: 'sig',\n    ct_sig: 'Signature',\n    encsign: 'sign',\n    enc_sign: 'Sign',\n    decvrfy: 'vrfy',\n    dec_vrfy: 'Verify',\n  },\n};\n\nexport { NIST_ROUNDS, SCHEME_TYPES, SEC_NOTIONS };\n","export default function not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n","import {\n  Card,\n  Checkbox,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport intersection from '../utils/intersection';\nimport not from '../utils/not';\nimport union from '../utils/union';\n\nconst propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  checkedList: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minWidth: 240,\n    maxWidth: 300,\n    overflow: 'auto',\n    maxHeight: 200,\n  },\n  listItem: {\n    padding: 1,\n  },\n}));\n\nfunction SchemeCheckboxList(props) {\n  const { list, checkedList, onChange } = props;\n  const checked = checkedList ?? [];\n\n  const handleSchemeToggle = (scheme) => () => {\n    const currentIndex = checked.indexOf(scheme);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(scheme);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    onChange(newChecked);\n  };\n  const numberOfChecked = (items) => intersection(checked, items).length;\n\n  const handleToggleAll = (items) => () => {\n    let newChecked;\n    if (numberOfChecked(items) === items.length) {\n      newChecked = not(checked, items);\n    } else {\n      newChecked = union(checked, items);\n    }\n    onChange(newChecked);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <List>\n        <ListItem dense className={classes.listItem} button onClick={handleToggleAll(list)}>\n          <ListItemIcon>\n            <Checkbox\n              checked={numberOfChecked(list) === list.length && list.length !== 0}\n              indeterminate={numberOfChecked(list) !== list.length && numberOfChecked(list) !== 0}\n              tabIndex={-1}\n              disableRipple\n            />\n          </ListItemIcon>\n          <ListItemText primary=\"Schemes\" />\n        </ListItem>\n      </List>\n      <Divider />\n      <List className={classes.root}>\n        {list.map((value) => (\n          <ListItem\n            dense\n            className={classes.listItem}\n            key={value}\n            button\n            onClick={\n            handleSchemeToggle(value)\n            }\n          >\n            <ListItemIcon>\n              <Checkbox\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n              />\n            </ListItemIcon>\n            <ListItemText primary={value} />\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\nSchemeCheckboxList.propTypes = propTypes;\n\nexport default SchemeCheckboxList;\n","export default function intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n","import not from './not';\n\nexport default function union(a, b) {\n  return [...a, ...not(b, a)];\n}\n","export default function detailLink(scheme, flavor) {\n  let url = '/detail';\n  url += `/${scheme}`;\n  if (flavor !== undefined) { url += `/${flavor}`; }\n\n  return url;\n}\n","export default function humanReadableSize(size, baseUnit) {\n  if (!Number.isFinite(size)) return '';\n  const i = (size === 0) ? 0 : Math.floor(Math.log(size) / Math.log(1000));\n  return `${(size / 1000 ** i).toFixed(2) * 1} ${['', 'k', 'M', 'G', 'T'][i]}${baseUnit}`;\n}\n","export default function queryAll(db, query, params) {\n  const stmt = db.prepare(query, params);\n  const result = [];\n  while (stmt.step()) {\n    result.push(stmt.getAsObject());\n  }\n  stmt.free();\n  return result;\n}\n","import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Checkbox,\n  Container,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Link,\n  Paper,\n  Slider,\n  TextField,\n  ToggleButton,\n  ToggleButtonGroup,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport qs from 'query-string';\n\nimport QueryTable from '../components/QueryTable';\nimport { SCHEME_TYPES } from '../constants';\nimport SchemeCheckboxList from '../components/SchemeCheckboxList';\nimport detailLink from '../utils/detailLink';\nimport humanReadableSize from '../utils/humanReadableSize';\nimport not from '../utils/not';\nimport queryAll from '../utils/queryAll';\nimport queryAllAsArray from '../utils/queryAllAsArray';\n\nfunction schemesListQueryDB(db, type, nistRound, nonNist) {\n  const schemesListQuery = `\n    SELECT id_text FROM scheme\n    WHERE\n      type = ?\n      AND (nist_round BETWEEN ? AND '3f' ${(nonNist) ? 'OR nist_round = \\'none\\'' : ''})\n  `;\n  const schemesList = queryAll(db, schemesListQuery, [type, nistRound]);\n  return schemesList.map((row) => row.id_text);\n}\n\nconst secLevelMarks = [\n  { label: '0', value: 0 }, { label: '128', value: 128 }, { label: '64', value: 64 },\n  { label: '192', value: 192 }, { label: '256+', value: 256 },\n];\n\nconst nistRoundMarks = [\n  { label: '2', value: 2 }, { label: '3a', value: 3 }, { label: '3f', value: 4 },\n];\n\nfunction getNistRoundLabel(v) {\n  const round = nistRoundMarks.find((entry) => entry.value === v);\n  return round.label;\n}\n\nfunction getNistRoundValue(l) {\n  const round = nistRoundMarks.find((entry) => entry.label === l);\n  return round.value;\n}\n\nfunction buildQuery(state) {\n  return `SELECT\n  s.id_text as 'ID',\n  p.name || CASE\n      s.stateful\n      WHEN 0 THEN ''\n      ELSE ' (Stateful)'\n  END AS 'Name'${\n  (state.showColumns.includes('nist_round')) ? ',\\n   s.nist_round AS \\'NIST Round\\'' : ''\n}${(state.showColumns.includes('security_levels')) ? ',\\n    p.security_level_classical AS \\'Security Level (classical)\\'' : ''\n}${(state.showColumns.includes('security_levels')) ? ',\\n    p.security_level_quantum AS \\'Security Level (quantum)\\'' : ''\n}${(state.showColumns.includes('nist_category')) ? ',\\n    p.security_level_nist_category AS \\'NIST Category\\'' : ''\n}${(state.showColumns.includes('storage')) ? `,\n  p.sizes_sk AS 'Secret Key Size',\n  p.sizes_pk AS 'Public Key Size',\n  p.sizes_ct_sig AS '${SCHEME_TYPES[state.schemeType].ct_sig} Size',\n  (p.sizes_pk + p.sizes_ct_sig) AS 'Communication Size'` : ''}${(state.showColumns.includes('benchmarks')) ? `,\n  i.name AS 'Name'${(state.showColumns.includes('hw_features')) ? `,\n  (\n      SELECT\n          GROUP_CONCAT(hf.feature, \", \")\n      FROM\n          implementation_hardware_feature hf\n      WHERE\n          hf.implementation_id = i.id\n  ) AS 'Hardware Features'` : ''},\n  ${(state.showColumns.includes('code_size')) ? `\n  i.code_size_overall AS 'Overall Code Size',\n  i.code_size_gen AS 'KeyGen Code Size',\n  i.code_size_enc_sign AS '${SCHEME_TYPES[state.schemeType].enc_sign} Code Size',\n  i.code_size_dec_vrfy AS '${SCHEME_TYPES[state.schemeType].dec_vrfy} Code Size',` : ''}\n  b.platform AS 'Platform',\n  round(b.timings_gen / 1000) AS 'KeyGen (kCycles)',\n  round(b.timings_enc_sign / 1000) AS '${SCHEME_TYPES[state.schemeType].enc_sign} (kCycles)',\n  round(b.timings_dec_vrfy / 1000) AS '${SCHEME_TYPES[state.schemeType].dec_vrfy} (kCycles)',\n  round((timings_gen + b.timings_enc_sign + b.timings_dec_vrfy) / 1000) AS 'Total (kCycles)'\n  ${(state.showColumns.includes('memory_req')) ? `,\n  b.memory_requirements_gen AS 'KeyGen Memory Req.',\n  b.memory_requirements_enc_sign AS '${SCHEME_TYPES[state.schemeType].enc_sign} Memory Req.',\n  b.memory_requirements_dec_vrfy AS '${SCHEME_TYPES[state.schemeType].dec_vrfy} Memory Req.' ` : ''}\n` : ''}\nFROM\n  scheme s\n  JOIN flavor f ON s.id = f.scheme_id\n  JOIN paramset p ON f.id = p.flavor_id${(state.showColumns.includes('benchmarks')) ? `\n  LEFT JOIN benchmark b ON p.id = b.paramset_id\n  LEFT JOIN implementation i ON i.id = b.implementation_id` : ''}\nWHERE\n  s.type = ?\n  AND s.id_text IN (${JSON.stringify(state.checkedSchemes ?? []).slice(1, -1)})\n  AND (\n      s.nist_round BETWEEN ? AND '3f'${\n  (state.showNonNistSchemes) ? '\\n        OR s.nist_round = \\'none\\'' : ''}\n  )\n  AND p.security_level_classical >= ?\n  AND p.security_level_quantum >= ?${\n  (state.showColumns.includes('benchmarks'))\n    ? ((!state.showRef) ? '\\n    AND i.type = \\'optimized\\'' : '')\n        + ((state.platformFilter !== '') ? '\\n    AND b.platform LIKE \\'%\\' || ? || \\'%\\'' : '')\n    : ''}`;\n  // Note: The (very fragile) `expandQuery` method below makes quite\n  // some assumptions on the structure of this query (for example, no\n  // question marks in strings or comments). When making changes,\n  // please verify that the \"view as SQL\" link still works.\n}\n\nfunction createHeaderSections(state) {\n  const headers = [];\n  const headerSpans = [];\n  headers.push('Parameter Set');\n  headerSpans.push(1);\n  if (state.showColumns.includes('security_levels')) { headerSpans[headerSpans.length - 1] += 2; }\n  if (state.showColumns.includes('nist_category')) { headerSpans[headerSpans.length - 1] += 1; }\n  if (state.showColumns.includes('nist_round')) { headerSpans[headerSpans.length - 1] += 1; }\n  if (state.showColumns.includes('storage')) {\n    headers.push('Size');\n    headerSpans.push(4);\n  }\n  if (state.showColumns.includes('benchmarks')) {\n    headers.push('Implementation');\n    headerSpans.push(1);\n    if (state.showColumns.includes('hw_features')) { headerSpans[headerSpans.length - 1] += 1; }\n    if (state.showColumns.includes('code_size')) { headerSpans[headerSpans.length - 1] += 4; }\n    headers.push('Benchmark');\n    headerSpans.push(5);\n    if (state.showColumns.includes('memory_req')) { headerSpans[headerSpans.length - 1] += 3; }\n  }\n  return { headers, headerSpans };\n}\n\nfunction prepareParams(state) {\n  const params = [state.schemeType, state.nistRound, state.securityLevel, state.securityQuantum];\n  if (state.showColumns.includes('benchmarks') && state.platformFilter !== '') {\n    params.push(state.platformFilter);\n  }\n  return params;\n}\n\nfunction getFormatFunctions(results) {\n  if (results === undefined) return undefined;\n  const formatFunctions = Array(results.columns.length).fill(undefined);\n  results.columns.forEach((col, idx) => {\n    if (col.endsWith('(kCycles)')) formatFunctions[idx] = (val) => val?.toLocaleString();\n    if (col.endsWith('Size')) formatFunctions[idx] = (val) => humanReadableSize(val, 'B');\n    if (col.endsWith('Memory Req.')) formatFunctions[idx] = (val) => humanReadableSize(val, 'B');\n  });\n  return formatFunctions;\n}\n\nclass SchemeComparison extends React.Component {\n  constructor(props) {\n    super(props);\n    const { history, db } = props;\n    this.platformFilterTimeout = null;\n    this.fullSchemeLists = {\n      enc: schemesListQueryDB(db, 'enc', '0', true),\n      sig: schemesListQueryDB(db, 'sig', '0', true),\n    };\n    this.state = {\n      queryProcessing: true,\n      queryResult: undefined,\n      schemesList: [],\n      query: 'null',\n      headers: [],\n      headerSpans: [],\n    };\n\n    this.defaultState = {\n      // not shown: 'storage', 'security_levels', 'nist_round', 'memory_req', 'code_size'\n      showColumns: ['benchmarks', 'hw_features', 'nist_category'],\n      schemeType: 'sig',\n      platformFilter: '',\n      sliderValue: 128,\n      securityLevel: 128,\n      securityQuantum: 0,\n      showRef: false,\n      nistRound: '3a',\n      showNonNistSchemes: false,\n      order: 'asc',\n      orderBy: null,\n      checkedSchemes: null,\n    };\n    Object.assign(this.state, this.defaultState);\n    const params = qs.parse(history.location.search);\n    if ('state' in params) {\n      try {\n        const paramState = JSON.parse(params.state);\n        Object.assign(this.state, paramState);\n      } catch {\n        // JSON state was invalid -> ignore\n      }\n    }\n    const { checkedSchemes, schemeType } = this.state;\n    if (!checkedSchemes) {\n      this.state.checkedSchemes = this.fullSchemeLists[schemeType];\n    }\n  }\n\n  componentDidMount() {\n    const { checkedSchemes } = this.state;\n    this.updateResult(!checkedSchemes, false);\n    document.title = 'Scheme Comparison - pqdb';\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      queryProcessing, schemeType, order, orderBy,\n    } = this.state;\n    if (queryProcessing) {\n      const resetChecked = prevState.schemeType !== schemeType;\n      setTimeout(() => {\n        this.updateResult(resetChecked, true);\n        this.updateSearchParams(false);\n      }, 300);\n    } else if (prevState.order !== order || prevState.orderBy !== orderBy) {\n      this.updateSearchParams(true);\n    }\n  }\n\n  setFilterState(change) {\n    this.setState({ queryProcessing: true, ...change });\n  }\n\n  expandQuery() {\n    // UNSAFE, DO NOT USE\n    // this is very hacky and unreliable - we just use it here to generate\n    // an expanded string that is returned back to the user, so there is no\n    // injection possibility, and no real harm results when it goes wrong.\n\n    const params = prepareParams(this.state).slice();\n    let error = false;\n\n    function replacer() {\n      const val = params.shift();\n      if (val === undefined) {\n        error = true;\n        return '';\n      }\n      if (typeof val === 'string') return `'${val.replaceAll('\\'', '\\'\\'')}'`;\n      return val.toString();\n    }\n\n    const { query } = this.state;\n    const sqlQuery = query.replaceAll('?', replacer);\n    if (error && params.length > 0) {\n      return '';\n    }\n    return sqlQuery;\n  }\n\n  computeResult(state, sqlQuery) {\n    const { db } = this.props;\n    const params = prepareParams(state);\n    const results = queryAllAsArray(db, sqlQuery, params);\n    if (results.values.length === 0) return undefined;\n    results.columns.shift(); // Remove the 'ID' column name\n    results.values.forEach((res) => {\n      res[1] = <Link component={RouterLink} to={detailLink(res[0])}>{res[1]}</Link>;\n      res.shift(); // Remove the 'ID' entry\n    });\n\n    return results;\n  }\n\n  updateResult(resetChecked, resetOrder) {\n    const queryState = { ...this.state };\n    const { db } = this.props;\n    const { schemeType, nistRound, showNonNistSchemes } = this.state;\n    const schemesList = schemesListQueryDB(db, schemeType, nistRound, showNonNistSchemes);\n    if (resetChecked) queryState.checkedSchemes = this.fullSchemeLists[schemeType];\n    const query = buildQuery(queryState);\n    const queryResult = this.computeResult(queryState, query);\n    let change = Object.assign(createHeaderSections(queryState), {\n      queryProcessing: false, queryResult, schemesList, query,\n    });\n    if (resetChecked) change.checkedSchemes = this.fullSchemeLists[schemeType];\n    if (resetOrder) change = Object.assign(change, { order: 'asc', orderBy: null });\n    this.setState(change);\n  }\n\n  updateSearchParams(replace) {\n    const searchParam = {};\n    const { schemeType } = this.state;\n    this.defaultState.checkedSchemes = this.fullSchemeLists[schemeType];\n    Object.keys(this.defaultState).forEach((key) => {\n      // eslint-disable-next-line react/destructuring-assignment\n      const value = this.state[key];\n      if (Array.isArray(this.defaultState[key]) && Array.isArray(value)) {\n        if (not(this.defaultState[key], value).length > 0\n         || not(value, this.defaultState[key]).length > 0) {\n          searchParam[key] = value;\n        }\n      } else if (value !== this.defaultState[key]) {\n        searchParam[key] = value;\n      }\n    });\n    const searchParamStr = JSON.stringify(searchParam);\n    const historyParams = [\n      null, null, (searchParamStr === '{}') ? '?' : `?${qs.stringify({ state: searchParamStr })}`,\n    ];\n    if (replace) window.history.replaceState(...historyParams);\n    else window.history.pushState(...historyParams);\n  }\n\n  render() {\n    const expandedQuery = this.expandQuery();\n    const {\n      checkedSchemes, headers, headerSpans, nistRound, order, orderBy, platformFilter,\n      queryProcessing, queryResult, securityLevel, securityQuantum, schemesList, schemeType,\n      showColumns, showNonNistSchemes, showRef,\n    } = this.state;\n    return (\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item>\n          <Container maxWidth=\"md\">\n            <Paper>\n              <Box p={2}>\n                <Grid justifyContent=\"space-between\" container direction=\"row\">\n                  <Grid item>\n                    <Typography variant=\"h4\">Scheme Comparison</Typography>\n                  </Grid>\n                  <Grid item>\n                    <ToggleButtonGroup\n                      value={schemeType}\n                      exclusive\n                      size=\"medium\"\n                      onChange={(_event, value) => {\n                        if (value !== null) this.setFilterState({ schemeType: value });\n                      }}\n                    >\n                      <ToggleButton disabled={queryProcessing} value=\"sig\">\n                        Signature\n                      </ToggleButton>\n                      <ToggleButton disabled={queryProcessing} value=\"enc\">\n                        Key Exchange\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n                  </Grid>\n                </Grid>\n                <Box my={2}>\n                  <Paper>\n                    <Box p={2} mb={2}>\n                      <Box mb={2}>\n                        <Typography variant=\"button\">Select columns to display</Typography>\n                      </Box>\n                      <Box display=\"flex\" justifyContent=\"center\">\n                        <ToggleButtonGroup\n                          value={showColumns}\n                          size=\"medium\"\n                          onChange={(_event, value) => this.setFilterState({ showColumns: value })}\n                        >\n                          <ToggleButton disabled={queryProcessing} value=\"storage\">\n                            <Tooltip title=\"Size of keys and ciphertext/signature\">\n                              <div>Sizes</div>\n                            </Tooltip>\n                          </ToggleButton>\n                          <ToggleButton disabled={queryProcessing} value=\"benchmarks\">\n                            <Tooltip title=\"Timings for cryptographic operations\">\n                              <div>Benchmarks</div>\n                            </Tooltip>\n                          </ToggleButton>\n                          <ToggleButton\n                            disabled={queryProcessing || !showColumns.includes('benchmarks')}\n                            value=\"hw_features\"\n                          >\n                            <Tooltip title=\"Hardware features required by the implementation\">\n                              <div>Hardware Features</div>\n                            </Tooltip>\n                          </ToggleButton>\n                          <ToggleButton\n                            disabled={queryProcessing || !showColumns.includes('benchmarks')}\n                            value=\"code_size\"\n                          >\n                            <Tooltip title=\"Code size required by the implementation\">\n                              <div>Code Size</div>\n                            </Tooltip>\n                          </ToggleButton>\n                          <ToggleButton\n                            disabled={queryProcessing || !showColumns.includes('benchmarks')}\n                            value=\"memory_req\"\n                          >\n                            <Tooltip title=\"Memory used by the functions at runtime\">\n                              <div>Memory Requirements</div>\n                            </Tooltip>\n                          </ToggleButton>\n                          <ToggleButton disabled={queryProcessing} value=\"security_levels\">\n                            <Tooltip title=\"Security level in bits (classical/quantum)\">\n                              <div>Security Levels</div>\n                            </Tooltip>\n                          </ToggleButton>\n                          <ToggleButton disabled={queryProcessing} value=\"nist_category\">\n                            <Tooltip title=\"NIST security level (1-5)\">\n                              <div>NIST Category</div>\n                            </Tooltip>\n                          </ToggleButton>\n                          <ToggleButton disabled={queryProcessing} value=\"nist_round\">\n                            <Tooltip title=\"Round of the NIST PQC standardization\">\n                              <div>NIST Round</div>\n                            </Tooltip>\n                          </ToggleButton>\n                        </ToggleButtonGroup>\n                      </Box>\n                    </Box>\n                  </Paper>\n                  <Grid container justify=\"space-between\" spacing={1}>\n                    <Grid item xs>\n                      <Accordion>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                          <Typography variant=\"button\">Filter parameter sets</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <Grid container spacing={3} justify=\"space-between\">\n                            <Grid container item direction=\"column\" xs>\n                              <Grid container item spacing={2}>\n                                <Grid item xs={3} style={{ minWidth: 80 }}>\n                                  <Box><Typography>Classical Security</Typography></Box>\n                                </Grid>\n                                <Grid item xs style={{ minWidth: 150 }}>\n                                  <Slider\n                                    disabled={queryProcessing}\n                                    color=\"secondary\"\n                                    defaultValue={securityLevel}\n                                    step={16}\n                                    min={0}\n                                    max={256}\n                                    marks={secLevelMarks}\n                                    track=\"inverted\"\n                                    onChangeCommitted={\n                                      (e, v) => this.setFilterState({ securityLevel: v })\n                                    }\n                                    valueLabelDisplay=\"auto\"\n                                  />\n                                </Grid>\n                              </Grid>\n                              <Grid container item spacing={2}>\n                                <Grid item xs={3} style={{ minWidth: 80 }}>\n                                  <Typography>Quantum Security</Typography>\n                                </Grid>\n                                <Grid item xs style={{ minWidth: 150 }}>\n                                  <Slider\n                                    disabled={queryProcessing}\n                                    color=\"secondary\"\n                                    defaultValue={securityQuantum}\n                                    step={16}\n                                    min={0}\n                                    max={256}\n                                    marks={secLevelMarks}\n                                    track=\"inverted\"\n                                    onChangeCommitted={\n                                      (e, v) => this.setFilterState({ securityQuantum: v })\n                                    }\n                                    valueLabelDisplay=\"auto\"\n                                  />\n                                </Grid>\n                              </Grid>\n                              <Grid container item spacing={2}>\n                                <Grid item xs={3} style={{ minWidth: 80 }}>\n                                  <Typography>NIST Round</Typography>\n                                </Grid>\n                                <Grid item xs style={{ minWidth: 150 }}>\n                                  <Slider\n                                    disabled={queryProcessing}\n                                    color=\"secondary\"\n                                    defaultValue={getNistRoundValue(nistRound)}\n                                    step={null}\n                                    min={2}\n                                    max={4}\n                                    marks={nistRoundMarks}\n                                    track=\"inverted\"\n                                    onChangeCommitted={(e, v) => this.setFilterState({\n                                      nistRound: getNistRoundLabel(v),\n                                    })}\n                                    valueLabelFormat={getNistRoundLabel}\n                                    valueLabelDisplay=\"auto\"\n                                  />\n                                </Grid>\n                              </Grid>\n                              <Grid item>\n                                <FormControlLabel\n                                  control={(\n                                    <Checkbox\n                                      disabled={queryProcessing}\n                                      defaultChecked={showNonNistSchemes}\n                                      onChange={() => this.setFilterState({\n                                        showNonNistSchemes: !showNonNistSchemes,\n                                      })}\n                                    />\n                                  )}\n                                  label=\"Include schemes not in the NIST competition\"\n                                />\n                              </Grid>\n                            </Grid>\n                            <Grid item>\n                              <SchemeCheckboxList\n                                list={schemesList}\n                                checkedList={checkedSchemes}\n                                onChange={(newChecked) => this.setFilterState({\n                                  checkedSchemes: newChecked,\n                                })}\n                              />\n                            </Grid>\n                          </Grid>\n                        </AccordionDetails>\n                      </Accordion>\n                    </Grid>\n                    <Grid item>\n                      <Accordion>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                          <Typography variant=\"button\">Filter implementations</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <FormControl component=\"fieldset\">\n                            <FormControlLabel\n                              control={(\n                                <Checkbox\n                                  disabled={queryProcessing || !showColumns.includes('benchmarks')}\n                                  defaultChecked={showRef}\n                                  onChange={\n                                    () => this.setFilterState({ showRef: !showRef })\n                                  }\n                                />\n                              )}\n                              label=\"Include 'ref' Implementations\"\n                            />\n                            <TextField\n                              disabled={queryProcessing || !showColumns.includes('benchmarks')}\n                              defaultValue={platformFilter}\n                              color=\"secondary\"\n                              label=\"Platform\"\n                              variant=\"outlined\"\n                              onChange={(e) => {\n                                clearTimeout(this.platformFilterTimeout);\n                                const filterValue = e.target.value;\n                                this.platformFilterTimeout = setTimeout(() => {\n                                  this.platformFilterTimeout = null;\n                                  this.setFilterState({ platformFilter: filterValue });\n                                }, 750);\n                              }}\n                            />\n                          </FormControl>\n                        </AccordionDetails>\n                      </Accordion>\n                    </Grid>\n\n                  </Grid>\n                </Box>\n                <Link\n                  component={RouterLink}\n                  to={`/raw_sql?query=${encodeURIComponent(expandedQuery)}`}\n                >\n                  View this query as SQL\n                </Link>\n              </Box>\n            </Paper>\n          </Container>\n        </Grid>\n        <Grid container item>\n          <Container maxWidth={false} disableGutters>\n            <Paper>\n              <Box p={2} display=\"flex\" justifyContent=\"center\">\n                <QueryTable\n                  onChangeOrder={(newOrder, newOrderBy) => this.setState({\n                    order: newOrder, orderBy: newOrderBy,\n                  })}\n                  order={order}\n                  orderBy={orderBy}\n                  queryResult={queryResult}\n                  formatFunctions={getFormatFunctions(queryResult)}\n                  headers={headers}\n                  headerSpans={headerSpans}\n                />\n              </Box>\n            </Paper>\n          </Container>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nSchemeComparison.propTypes = {\n  db: PropTypes.shape({\n    prepare: PropTypes.func.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      search: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default SchemeComparison;\n","export default function queryAllAsArray(db, query, params) {\n  const stmt = db.prepare(query, params);\n  const result = { columns: stmt.getColumnNames(), values: [] };\n  while (stmt.step()) {\n    result.values.push(stmt.get());\n  }\n  stmt.free();\n  return result;\n}\n","import React from 'react';\nimport makeSvgIcon from '../utils/makeSvgIcon';\n\nconst Bottom = makeSvgIcon(\n  <path d=\"M 19,3 H 5 C 3.89,3 3,3.9 3,5 v 14 c 0,1.1 0.89,2 2,2 h 14 c 1.1,0 2,-0.9 2,-2 V 5 C 21,3.9 20.1,3 19,3 Z M 17,17 H 7 v -2 h 4 V 7 h 2 v 8 h 4 z\" />,\n);\n// without box: <path d=\"M 3,21 v -2 H 11 V 5 h 2 V 19 H 21 V 21 z\" />\n\nexport default Bottom;\n","import { InfoOutlined as InfoIcon } from '@mui/icons-material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Tooltip } from '@mui/material';\n\nconst propTypes = {\n  title: PropTypes.string,\n};\n\nconst defaultProps = {\n  title: null,\n};\n\nfunction Comment({ title }) {\n  if (title === undefined || title === null || title === '') { return null; }\n\n  return (\n    <>\n      {'\\u2002'}\n      <Tooltip interactive title={title} placement=\"right\" arrow>\n        <InfoIcon fontSize=\"inherit\" style={{ cursor: 'help' }} />\n      </Tooltip>\n    </>\n  );\n}\nComment.propTypes = propTypes;\nComment.defaultProps = defaultProps;\n\nexport default Comment;\n","import React from 'react';\nimport makeSvgIcon from '../utils/makeSvgIcon';\n\nconst Measure = makeSvgIcon(\n  <g fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2px\" strokeLinecap=\"round\">\n    <path d=\"m 16,18 v 2 M 4,16 v 4 H 20 V 16 M 8,18 v 2 m 4,-4 v 4\" />\n    <path d=\"m 5.5,8 -2,2 2,2 m -2,-2 h 5\" />\n    <path d=\"m 18.5,8 2,2 -2,2 m 2,-2 h -5\" />\n  </g>,\n);\n\nexport default Measure;\n","import {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst defaultProps = {\n  children: null,\n};\n\nconst propTypes = {\n  Icon: PropTypes.elementType.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nfunction PropItem({ children, Icon, title }) {\n  return (\n    <ListItem alignItems=\"flex-start\">\n      <ListItemIcon>\n        <Typography component=\"h2\" variant=\"inherit\">\n          <Tooltip title={title} arrow>\n            {/* overwrite some properties <Tooltip> sets */}\n            <Icon role=\"img\" aria-hidden={false} aria-label={title} aria-describedby={null} />\n          </Tooltip>\n        </Typography>\n      </ListItemIcon>\n      <ListItemText>\n        {children}\n      </ListItemText>\n    </ListItem>\n  );\n}\n\nPropItem.defaultProps = defaultProps;\nPropItem.propTypes = propTypes;\n\nexport default PropItem;\n","import React from 'react';\nimport makeSvgIcon from '../utils/makeSvgIcon';\n\nconst Book = makeSvgIcon(\n  <>\n    <path d=\"M 21,5 C 19.89,4.65 18.67,4.5 17.5,4.5 15.55,4.5 13.45,4.9 12,6 10.55,4.9 8.45,4.5 6.5,4.5 4.55,4.5 2.45,4.9 1,6 v 14.65 c 0,0.25 0.25,0.5 0.5,0.5 0.1,0 0.15,-0.05 0.25,-0.05 C 3.1,20.45 5.05,20 6.5,20 c 1.95,0 4.05,0.4 5.5,1.5 1.35,-0.85 3.8,-1.5 5.5,-1.5 1.65,0 3.35,0.3 4.75,1.05 0.1,0.05 0.15,0.05 0.25,0.05 0.25,0 0.5,-0.25 0.5,-0.5 V 6 C 22.4,5.55 21.75,5.25 21,5 Z M 6.5,6.5 C 5.3,6.5 4.1,6.65 3,7 V 18.5 C 4.01,18.15 5.3,18 6.5,18 c 1.7,0 4.15,0.65 5.5,1.5 1.35,-0.85 3.8,-1.5 5.5,-1.5 1.2,0 2.4,0.15 3.5,0.5 V 7 C 19.9,6.65 18.7,6.5 17.5,6.5 15.8,6.5 13.35,7.15 12,8 10.65,7.15 8.2,6.5 6.5,6.5 Z\" style={{ fillRule: 'evenodd' }} />\n    <path d=\"M 6.5,10.5 C 5.62,10.5 4.77,10.59 4,10.76 V 9.24 C 4.79,9.09 5.64,9 6.5,9 8.2,9 9.74,9.29 11,9.83 v 1.66 C 9.87,10.85 8.3,10.5 6.5,10.5 Z m 4.5,1.99 v 1.66 C 9.87,13.51 8.3,13.16 6.5,13.16 5.62,13.16 4.77,13.25 4,13.42 V 11.9 c 0.79,-0.15 1.64,-0.24 2.5,-0.24 1.7,0 3.24,0.3 4.5,0.83 z m -4.5,1.84 c 1.7,0 3.24,0.29 4.5,0.83 v 1.66 C 9.87,16.18 8.3,15.83 6.5,15.83 5.62,15.83 4.77,15.92 4,16.09 v -1.52 c 0.79,-0.16 1.64,-0.24 2.5,-0.24 z\" />\n    <path d=\"m 17.5,10.5 c 0.88,0 1.73,0.09 2.5,0.26 V 9.24 C 19.21,9.09 18.36,9 17.5,9 15.8,9 14.26,9.29 13,9.83 v 1.66 c 1.13,-0.64 2.7,-0.99 4.5,-0.99 z M 13,12.49 v 1.66 c 1.13,-0.64 2.7,-0.99 4.5,-0.99 0.88,0 1.73,0.09 2.5,0.26 V 11.9 c -0.79,-0.15 -1.64,-0.24 -2.5,-0.24 -1.7,0 -3.24,0.3 -4.5,0.83 z m 4.5,1.84 c -1.7,0 -3.24,0.29 -4.5,0.83 v 1.66 c 1.13,-0.64 2.7,-0.99 4.5,-0.99 0.88,0 1.73,0.09 2.5,0.26 v -1.52 c -0.79,-0.16 -1.64,-0.24 -2.5,-0.24 z\" />\n  </>,\n);\n\nexport default Book;\n","import { InfoOutlined as InfoIcon } from '@mui/icons-material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nfunction TextComment({ children }) {\n  return (\n    <>\n      <InfoIcon fontSize=\"inherit\" />\n      <em>\n        {' '}\n        {children}\n        {' '}\n      </em>\n    </>\n  );\n}\n\nTextComment.propTypes = propTypes;\n\nexport default TextComment;\n","import { Link } from '@mui/material';\nimport React from 'react';\n\nexport default function linkify(s) {\n  const url = s.match(/https?:\\/\\/[^\\s]*[^-.,;()]/g);\n  return url ? <Link href={url}>{s}</Link> : s;\n}\n","export default function romanCat(nistCat) {\n  const romans = ['ø', 'I', 'II', 'III', 'IV', 'V'];\n  if (Number.isInteger(nistCat) && romans[nistCat] !== undefined) return romans[nistCat];\n  return nistCat;\n}\n","import {\n  ArrowBack as ArrowBackIcon,\n  AutoMode as AutoModeIcon,\n  Category as CategoryIcon,\n  Memory as ChipIcon,\n  Code as CodeIcon,\n  SyncAlt as DiffieHellmanIcon,\n  Fort as FortIcon,\n  Translate as LanguageIcon,\n  Link as LinkIcon,\n  Security as SecurityIcon,\n} from '@mui/icons-material';\nimport {\n  Box,\n  Container,\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  NIST_ROUNDS,\n  SCHEME_TYPES,\n  SEC_NOTIONS,\n} from '../constants';\nimport BottomIcon from '../icons/Bottom';\nimport Comment from '../components/Comment';\nimport MeasureIcon from '../icons/Measure';\nimport PropItem from '../components/PropItem';\nimport SourceIcon from '../icons/Book';\nimport TextComment from '../components/TextComment';\nimport detailLink from '../utils/detailLink';\nimport linkify from '../utils/linkify';\nimport queryAll from '../utils/queryAll';\nimport romanCat from '../utils/romanCat';\n\nconst propTypes = {\n  db: PropTypes.shape({\n    prepare: PropTypes.func.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      schemeId: PropTypes.string.isRequired,\n      flavorId: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nclass FlavorDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scheme: null,\n      flavor: undefined,\n      paramsets: undefined,\n      implementations: undefined,\n      links: undefined,\n      sources: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { schemeId, flavorId } }, db } = this.props;\n\n    const scheme = queryAll(db, 'SELECT * FROM scheme WHERE id_text=?', [schemeId])[0];\n    const flavor = queryAll(db, 'SELECT * FROM flavor WHERE scheme_id=? AND id_text=?', [scheme.id, flavorId])[0];\n    if (scheme === undefined || flavor === undefined) {\n      document.title = 'Unknown - Flavor Details - pqdb';\n      this.setState({ scheme });\n    } else {\n      document.title = `${flavor.name} - Flavor Details - pqdb`;\n      const paramsets = queryAll(db, 'SELECT * FROM paramset WHERE flavor_id=? ORDER BY security_level_nist_category ASC, security_level_quantum ASC', [flavor.id]);\n      const implementations = queryAll(db, 'SELECT * FROM implementation WHERE flavor_id=? ORDER BY type DESC', [flavor.id]); // reference before optimized\n      const links = queryAll(db, 'SELECT * FROM flavor_link WHERE flavor_id=?', [flavor.id]);\n      const sources = queryAll(db, 'SELECT * FROM flavor_source WHERE flavor_id=?', [flavor.id]);\n      this.setState({\n        scheme,\n        flavor,\n        paramsets,\n        implementations,\n        links,\n        sources,\n      });\n    }\n  }\n\n  render() {\n    const { db } = this.props;\n    const {\n      scheme,\n      flavor,\n      paramsets,\n      implementations,\n      links,\n      sources,\n    } = this.state;\n\n    if (scheme === null) return null;\n\n    if (scheme === undefined) {\n      return <Container><Paper>No such scheme.</Paper></Container>;\n    }\n    if (flavor === undefined) {\n      return <Container><Paper>No such flavor.</Paper></Container>;\n    }\n\n    const TypeIcon = SCHEME_TYPES[scheme.type].icon;\n    return (\n      <Container maxWidth=\"md\">\n        <Paper>\n          <Box>\n            <List>\n              <ListItem key=\"scheme-head\" alignItems=\"flex-start\">\n                <ListItemText>\n                  <Typography variant=\"h6\">\n                    <Link component={RouterLink} to={detailLink(scheme.id_text)}>\n                      <ArrowBackIcon fontSize=\"inherit\" />\n                      {[' ']}\n                      {scheme.name}\n                    </Link>\n                    {' '}\n                    <Tooltip title={SCHEME_TYPES[scheme.type].name} arrow>\n                      <TypeIcon fontSize=\"inherit\" aria-hidden={false} role=\"img\" aria-label={SCHEME_TYPES[scheme.type].name} aria-describedby={null} />\n                    </Tooltip>\n                    {' '}\n                    <span style={{ fontWeight: 'normal', marginLeft: '.4em' }}>\n                      {scheme.category}\n                      {' '}\n                      <Comment title={scheme.category_comment} />\n                      {(scheme.stateful === true)\n                      && (\n                      <>\n                        {' \\u2022'}\n                        {' '}\n                        stateful\n                        {' '}\n                        <Comment title={scheme.stateful_comment} />\n                      </>\n                      )}\n                      {(scheme.nist_round !== 'none')\n                      && (\n                      <>\n                        {' \\u2022'}\n                        {' '}\n                        {NIST_ROUNDS[scheme.nist_round].short}\n                        <Comment title={scheme.nist_round_comment} />\n                      </>\n                      )}\n                    </span>\n                  </Typography>\n                </ListItemText>\n              </ListItem>\n\n              <ListItem key=\"flavor-head\" alignItems=\"flex-start\">\n                <ListItemText>\n                  <Typography variant=\"h3\">\n                    {flavor.name}\n                  </Typography>\n                  {flavor.description && <div>{flavor.description}</div>}\n                  {flavor.comment && <div><TextComment>{flavor.comment}</TextComment></div>}\n                </ListItemText>\n              </ListItem>\n\n              <PropItem key=\"type\" title=\"API Type\" Icon={CategoryIcon}>\n                {flavor.type}\n                {' '}\n                <Comment title={flavor.type_comment} />\n              </PropItem>\n\n              <PropItem key=\"securitynotion\" title=\"Security Notion\" Icon={SecurityIcon}>\n                <Tooltip title={SEC_NOTIONS[flavor.security_notion]}>\n                  <span>{flavor.security_notion}</span>\n                </Tooltip>\n                <Comment title={flavor.security_notion_comment} />\n              </PropItem>\n\n              {flavor.dh_ness\n              && (\n              <PropItem key=\"dhness\" title=\"Diffie-Hellman-Ness\" Icon={DiffieHellmanIcon}>\n                <strong>Diffie-Hellman-Ness: </strong>\n                {flavor.dh_ness}\n              </PropItem>\n              )}\n\n              {links.length > 0\n              && (\n              <PropItem key=\"links\" title=\"Links\" Icon={LinkIcon}>\n                {links.map((l) => <div key={l.url}>{linkify(l.url)}</div>)}\n              </PropItem>\n              )}\n\n              {sources.length > 0\n              && (\n              <PropItem key=\"sources\" title=\"Sources\" Icon={SourceIcon}>\n                {sources.map((s) => <div key={s.url}>{linkify(s.url)}</div>)}\n              </PropItem>\n              )}\n\n              <ListItem key=\"paramsets\">\n                <Typography component=\"h3\" variant=\"h4\">Parameter Sets</Typography>\n              </ListItem>\n\n              {paramsets.map((p) => {\n                const paramsetLinks = queryAll(db, 'SELECT * FROM paramset_link WHERE paramset_id=?', [p.id]);\n                const paramsetSources = queryAll(db, 'SELECT * FROM paramset_source WHERE paramset_id=?', [p.id]);\n                return (\n                  <div key={`p-${p.id}`}>\n                    <ListItem key=\"head\" style={{ display: 'block' }}>\n                      <Typography component=\"h4\" variant=\"h5\">\n                        {p.name}\n                      </Typography>\n                      {p.comment && <div><TextComment>{p.comment}</TextComment></div>}\n                    </ListItem>\n\n                    <PropItem key=\"seclevel\" title=\"Security Level\" Icon={SecurityIcon}>\n                      <div>\n                        {(p.security_level_nist_category ?? 0) > 0 && (\n                        <>\n                          <Tooltip title={`NIST Category ${p.security_level_nist_category}`}>\n                            <span>{romanCat(p.security_level_nist_category)}</span>\n                          </Tooltip>\n                          {' \\u2022 '}\n                        </>\n                        )}\n                        {p.security_level_quantum}\n                        {' '}\n                        <span style={{ opacity: 0.5 }}> (quantum)</span>\n                        {p.security_level_classical && (\n                        <>\n                          {` \\u2022 ${p.security_level_classical}`}\n                          <span style={{ opacity: 0.5 }}> (classical)</span>\n                        </>\n                        )}\n                      </div>\n                      {p.security_level_comment\n                      && <div><TextComment>{p.security_level_comment}</TextComment></div>}\n                    </PropItem>\n\n                    {(scheme.type === 'enc' || p.failure_probability !== 0 || p.failure_probability_comment)\n                    && (\n                    <PropItem key=\"failureprob\" title=\"Failure Probability\" Icon={BottomIcon}>\n                      {p.failure_probability === 0\n                        ? '0'\n                        : (\n                          <>\n                            2\n                            <sup>{p.failure_probability}</sup>\n                          </>\n                        )}\n                      <Comment title={p.failure_probability_comment} />\n                    </PropItem>\n                    )}\n\n                    <PropItem key=\"numop\" title=\"Number of operations\" Icon={AutoModeIcon}>\n                      {p.number_of_operations === 'inf'\n                        ? 'unlimited'\n                        : p.number_of_operations}\n                    </PropItem>\n\n                    <PropItem key=\"sizes\" title=\"Sizes\" Icon={MeasureIcon}>\n                      <div>\n                        sk:\n                        {' '}\n                        {p.sizes_sk}\n                        {' '}\n                        {' \\u2022 '}\n                        pk:\n                        {' '}\n                        {p.sizes_pk}\n                        {' '}\n                        {' \\u2022 '}\n                        {SCHEME_TYPES[scheme.type].ctsig}\n                        {': '}\n                        {p.sizes_ct_sig}\n                      </div>\n                      {p.sizes_comment && <div><TextComment>{p.sizes_comment}</TextComment></div>}\n                    </PropItem>\n\n                    {paramsetLinks.length > 0\n                    && (\n                    <PropItem key=\"links\" title=\"Links\" Icon={LinkIcon}>\n                      {paramsetLinks.map((l) => <div key={l.url}>{linkify(l.url)}</div>)}\n                    </PropItem>\n                    )}\n\n                    {paramsetSources.length > 0\n                    && (\n                    <PropItem key=\"sources\" title=\"Sources\" Icon={SourceIcon}>\n                      {paramsetSources.map((s) => <div key={s.url}>{linkify(s.url)}</div>)}\n                    </PropItem>\n                    )}\n                  </div>\n                );\n              })}\n\n              <ListItem key=\"implementations\">\n                <Typography component=\"h3\" variant=\"h4\">Implementations</Typography>\n              </ListItem>\n\n              {implementations.map((i) => {\n                const implLinks = queryAll(db, 'SELECT * FROM implementation_link WHERE implementation_id=?', [i.id]);\n                const implSources = queryAll(db, 'SELECT * FROM implementation_source WHERE implementation_id=?', [i.id]);\n                const implHardware = queryAll(db, 'SELECT * FROM implementation_hardware_feature WHERE implementation_id=?', [i.id]);\n                const implDependencies = queryAll(db, 'SELECT * FROM implementation_dependency WHERE implementation_id=?', [i.id]);\n                let implSideChannelGuarding = [\n                  i.side_channel_guarding_branching && 'branching',\n                  i.side_channel_guarding_timing && 'timing',\n                ].filter(Boolean);\n                if (implSideChannelGuarding.length === 0) implSideChannelGuarding = ['none'];\n                const sideChannelInfo = { 0: 'no', 1: 'yes', null: 'unknown' };\n\n                return (\n                  <div key={`i-${i.id}`}>\n                    <ListItem key={`i-${i.id}-head`} style={{ display: 'block' }}>\n                      <Typography component=\"h4\" variant=\"h5\">\n                        {i.name}\n                      </Typography>\n                      {i.comment && <div><TextComment>{i.comment}</TextComment></div>}\n                    </ListItem>\n\n                    <PropItem key={`i-${i.id}-platform`} title=\"Platform\" Icon={LanguageIcon}>\n                      {i.platform}\n                    </PropItem>\n\n                    <PropItem key={`i-${i.id}-type`} title=\"Type of Implementation\" Icon={CategoryIcon}>\n                      {i.type}\n                    </PropItem>\n\n                    {implHardware.length > 0\n                    && (\n                    <PropItem key={`i-${i.id}-hardware`} title=\"Required Hardware Features\" Icon={ChipIcon}>\n                      {implHardware.map((h) => <div key={h.feature}>{h.feature}</div>)}\n                    </PropItem>\n                    )}\n\n                    {implDependencies.length > 0\n                    && (\n                    <PropItem key={`i-${i.id}-deps`} title=\"Code Dependencies\" Icon={CodeIcon}>\n                      {implDependencies.map((d) => <div key={d.dependency}>{d.dependency}</div>)}\n                    </PropItem>\n                    )}\n\n                    <PropItem key={`i-${i.id}-sidechannel`} title=\"Side Channel Guarding\" Icon={FortIcon}>\n                      <div>\n                        branching:\n                        {' '}\n                        {sideChannelInfo[i.side_channel_guarding_branching]}\n                        <Comment title={i.side_channel_guarding_branching_comment} />\n                      </div>\n                      <div>\n                        timing:\n                        {' '}\n                        {sideChannelInfo[i.side_channel_guarding_timing]}\n                        <Comment title={i.side_channel_guarding_timing_comment} />\n                      </div>\n                    </PropItem>\n\n                    {\n                                // TODO code size and randomness missing\n                                }\n\n                    {implLinks.length > 0\n                    && (\n                    <PropItem key={`i-${i.id}-links`} title=\"Links\" Icon={LinkIcon}>\n                      {implLinks.map((l) => <div key={l.url}>{linkify(l.url)}</div>)}\n                    </PropItem>\n                    )}\n\n                    {implSources.length > 0\n                    && (\n                    <PropItem key={`i-${i.id}-sources`} title=\"Sources\" Icon={SourceIcon}>\n                      {implSources.map((s) => <div key={s.url}>{linkify(s.url)}</div>)}\n                    </PropItem>\n                    )}\n                  </div>\n                );\n              })}\n\n              <ListItem key=\"benchmarks\">\n                <ListItemText>\n                  <Typography component=\"h3\" variant=\"h4\">Benchmarks</Typography>\n                  <div><Link component={RouterLink} to={`/raw_sql?query=SELECT p.name AS 'Parameter Set'%2C i.name AS Implementation%2C b.platform AS Platform%2C b.comment AS '🛈'%2C b.timings_unit%2C b.timings_gen%2C b.timings_enc_sign%2C b.timings_dec_vrfy%2C b.timings_comment AS '🛈'%2C b.memory_requirements_gen%2C b.memory_requirements_enc_sign%2C b.memory_requirements_dec_vrfy%2C b.memory_requirements_comment AS '🛈' FROM benchmark b%2C paramset p%2C implementation i WHERE p.id%3Db.paramset_id AND i.id%3Db.implementation_id AND p.flavor_id%3D${flavor.id}`}>Show all benchmarks for this flavor</Link></div>\n                  {' '}\n                  {/* TODO: include this right here as a table */}\n                </ListItemText>\n              </ListItem>\n            </List>\n          </Box>\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nFlavorDetail.propTypes = propTypes;\n\nexport default FlavorDetail;\n","import React from 'react';\nimport makeSvgIcon from '../utils/makeSvgIcon';\n\nconst Podium = makeSvgIcon(\n  <>\n    <path d=\"m 9,13 a 1,1 0 0 0 -1,1 v 1 H 3 a 1,1 0 0 0 -1,1 v 5 a 1,1 0 0 0 1,1 h 6 6 6 a 1,1 0 0 0 1,-1 v -4 a 1,1 0 0 0 -1,-1 h -5 v -2 a 1,1 0 0 0 -1,-1 z m 1,2 h 4 v 2 3 h -4 v -4 z m -6,2 h 4 v 3 H 4 Z m 12,1 h 4 v 2 h -4 z\" />\n    <path d=\"M 12.000161,1.6501422 11.327714,3.0136344 10.57411,4.5374239 7.3877136,5.000934 9.6929716,7.2470267 9.1480576,10.42014 12.000161,8.9233882 14.850333,10.42014 14.307351,7.2470267 16.612609,5.000934 13.426213,4.5374239 Z m 0,3.3894176 0.428976,0.8690815 0.95843,0.139053 -0.693703,0.6759522 0.164248,0.9559896 -0.857951,-0.4519223 -0.85795,0.449991 0.164247,-0.9540583 -0.693703,-0.6759522 0.958431,-0.139053 zM 12.000161,1.6501422 11.327714,3.0136344 10.57411,4.5374239 7.3877136,5.000934 9.6929716,7.2470267 9.1480576,10.42014 12.000161,8.9233882 14.850333,10.42014 14.307351,7.2470267 16.612609,5.000934 13.426213,4.5374239 Z m 0,3.3894176 0.428976,0.8690815 0.95843,0.139053 -0.693703,0.6759522 0.164248,0.9559896 -0.857951,-0.4519223 -0.85795,0.449991 0.164247,-0.9540583 -0.693703,-0.6759522 0.958431,-0.139053 z\" />\n  </>,\n);\n\nexport default Podium;\n","import {\n  Box,\n  Container,\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport {\n  Category as CategoryIcon,\n  Code as CodeIcon,\n  SyncAlt as DiffieHellmanIcon,\n  Event as EventIcon,\n  Link as LinkIcon,\n  Tune as ParamSetIcon,\n  PendingActions as PendingActionsIcon,\n  PeopleAlt as PeopleIcon,\n  Save as SaveIcon,\n  Security as SecurityIcon,\n} from '@mui/icons-material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  NIST_ROUNDS,\n  SCHEME_TYPES,\n  SEC_NOTIONS,\n} from '../constants';\nimport Comment from '../components/Comment';\nimport PodiumIcon from '../icons/Podium';\nimport PropItem from '../components/PropItem';\nimport SourceIcon from '../icons/Book';\nimport TextComment from '../components/TextComment';\nimport detailLink from '../utils/detailLink';\nimport linkify from '../utils/linkify';\nimport queryAll from '../utils/queryAll';\nimport romanCat from '../utils/romanCat';\n\nconst propTypes = {\n  db: PropTypes.shape({\n    prepare: PropTypes.func.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      schemeId: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nclass SchemeDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scheme: null,\n      authors: undefined,\n      problems: undefined,\n      sources: undefined,\n      links: undefined,\n      flavors: undefined,\n      patentslink: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { schemeId } }, db } = this.props;\n    const scheme = queryAll(db, 'SELECT * FROM scheme WHERE id_text=?', [schemeId])[0];\n    if (scheme === undefined) {\n      document.title = 'Unknown - Scheme Details - pqdb';\n      this.setState({ scheme: undefined });\n    } else {\n      document.title = `${scheme.name} - Scheme Details - pqdb`;\n      const authors = queryAll(db, 'SELECT * FROM scheme_author WHERE scheme_id=?', [scheme.id]);\n      const problems = queryAll(db, 'SELECT * FROM scheme_problem WHERE scheme_id=?', [scheme.id]);\n      const links = queryAll(db, 'SELECT * FROM scheme_link WHERE scheme_id=?', [scheme.id]);\n      const sources = queryAll(db, 'SELECT * FROM scheme_source WHERE scheme_id=?', [scheme.id]);\n      const flavors = queryAll(db, 'SELECT * FROM flavor WHERE scheme_id=?', [scheme.id]);\n      const patentslink = queryAll(db, 'SELECT * FROM scheme_patents_source WHERE scheme_id=?', [scheme.id]);\n      this.setState({\n        scheme, authors, problems, links, sources, flavors, patentslink,\n      });\n    }\n  }\n\n  render() {\n    const { db } = this.props;\n    const {\n      scheme, authors, problems, links, sources, flavors, patentslink,\n    } = this.state;\n\n    if (scheme === null) return null;\n\n    if (scheme === undefined) {\n      return <Container><Paper>No such scheme.</Paper></Container>;\n    }\n\n    const TypeIcon = SCHEME_TYPES[scheme.type].icon;\n\n    const exp = new RegExp('([[0-9]+])');\n    const patentString = scheme.patents?.split(exp);\n    return (\n      <Container maxWidth=\"md\">\n        <Paper>\n          <Box>\n            <List>\n              <ListItem key=\"head\" alignItems=\"flex-start\">\n                <ListItemText>\n                  <Typography component=\"h1\" variant=\"h2\">\n                    {scheme.name}\n                    {'  '}\n                    <Tooltip title={SCHEME_TYPES[scheme.type].name} arrow>\n                      <TypeIcon fontSize=\"large\" aria-hidden={false} role=\"img\" aria-label={SCHEME_TYPES[scheme.type].name} aria-describedby={null} />\n                    </Tooltip>\n                  </Typography>\n                  {scheme.description && <div>{scheme.description}</div>}\n                  {scheme.comment && <div><TextComment>{scheme.comment}</TextComment></div>}\n                </ListItemText>\n              </ListItem>\n\n              <PropItem key=\"category\" title=\"Category\" Icon={CategoryIcon}>\n                {scheme.category}\n                {' '}\n                based\n                <Comment title={scheme.category_comment} />\n              </PropItem>\n\n              {(scheme.stateful || scheme.stateful_comment) && (\n              <PropItem key=\"stateful\" title=\"Statefulness\" Icon={SaveIcon}>\n                {scheme.stateful ? 'stateful' : 'stateless' /* stateless only shown if there's a comment */}\n                <Comment title={scheme.stateful_comment} />\n              </PropItem>\n              )}\n              <PropItem key=\"nist_round\" title=\"NIST standardization\" Icon={PodiumIcon}>\n                {NIST_ROUNDS[scheme.nist_round].long}\n              </PropItem>\n\n              <PropItem key=\"year\" title=\"Year\" Icon={EventIcon}>\n                {\n                [\n                  scheme.year_paper\n                    ? [scheme.year_paper, <span key=\"pap\" style={{ opacity: 0.5 }}> (paper)</span>] : [],\n                  scheme.year_candidate\n                    ? [scheme.year_candidate, <span key=\"cand\" style={{ opacity: 0.5 }}> (NIST candidate)</span>] : [],\n                  scheme.year_standardization\n                    ? [scheme.year_standardization, <span key=\"sdt\" style={{ opacity: 0.5 }}> (standardization)</span>] : [],\n                  scheme.year_comment\n                    ? [<em key=\"comment\">{scheme.year_comment}</em>] : [],\n                ].reduce((accu, elem) => {\n                  // join(), but skipping empty entries\n                  if (!elem.length) return accu;\n                  if (!accu.length) return [elem];\n                  return [...accu, ' \\u2022 ', elem];\n                }, [])\n              }\n              </PropItem>\n\n              <PropItem key=\"problems_trust\" title=\"Security Properties\" Icon={SecurityIcon}>\n                {scheme.trust_comment\n                  && (\n                  <>\n                    <div><strong>Trust: </strong></div>\n                    <div style={{ marginBottom: '.6em' }}>{scheme.trust_comment}</div>\n                  </>\n                  )}\n                {(problems.length > 0 || scheme.problems_comment)\n                  && (\n                  <>\n                    <div><strong>Problems:</strong></div>\n                    {scheme.problems_comment\n                     && <div><TextComment>{scheme.problems_comment}</TextComment></div>}\n                    {problems.map((p) => (\n                      <div key={p.assumption}>\n                        {p.assumption}\n                        {' '}\n                        <Comment title={p.comment} />\n                      </div>\n                    ))}\n                  </>\n                  )}\n              </PropItem>\n\n              <PropItem key=\"authors\" title=\"Authors\" Icon={PeopleIcon}>\n                {authors.map((a) => <div key={a.name}>{a.name}</div>)}\n              </PropItem>\n\n              {(scheme.website || links.length > 0)\n                && (\n                <PropItem key=\"links\" title=\"Links\" Icon={LinkIcon}>\n                  {\n                    scheme.website\n                    && (\n                    <div key={scheme.website}>\n                      <Link href={scheme.website}>\n                        Website (\n                        {scheme.website}\n                        )\n                      </Link>\n                    </div>\n                    )\n                  }\n                  {links.map((l) => <div key={l.url}>{linkify(l.url)}</div>)}\n                </PropItem>\n                )}\n\n              {sources.length > 0\n                && (\n                <PropItem key=\"sources\" title=\"Sources\" Icon={SourceIcon}>\n                  {sources.map((s) => <div key={s.url}>{linkify(s.url)}</div>)}\n                </PropItem>\n                )}\n\n              {scheme.patents\n                && (\n                <PropItem key=\"patents\" title=\"Patents\" Icon={PendingActionsIcon}>\n                  <div key={patentString}>\n                    {patentString.map((ps) => {\n                      if (exp.test(ps)) {\n                        const xs = ps.replace('[', '');\n                        const x = xs.replace(']', '');\n                        const plElement = patentslink[x - 1];\n                        const plUrl = plElement.url;\n                        return (\n                          <Link href={plUrl}>\n                            {ps}\n                          </Link>\n                        );\n                      }\n                      return ps;\n                    })}\n                  </div>\n                </PropItem>\n                )}\n\n              <ListItem key=\"flavors\">\n                <Typography component=\"h2\" variant=\"h4\">Flavors</Typography>\n              </ListItem>\n\n              {flavors.map((f) => {\n                const flavorParamsets = queryAll(db, 'SELECT * FROM paramset WHERE flavor_id=? ORDER BY security_level_nist_category ASC, security_level_quantum ASC', [f.id]);\n                const flavorImplementations = queryAll(db, 'SELECT name FROM implementation WHERE flavor_id=? ORDER BY type DESC', [f.id]);\n\n                return (\n                  <div key={`flavor-${f.id}`}>\n                    <ListItem key=\"head\" style={{ display: 'block' }}>\n                      <Typography component=\"h3\" variant=\"h5\">\n                        <Link component={RouterLink} to={detailLink(scheme.id_text, f.id_text)}>\n                          {f.name}\n                        </Link>\n                      </Typography>\n                      {f.description && <div>{f.description}</div>}\n                      {f.comment && <div><TextComment>{f.comment}</TextComment></div>}\n                    </ListItem>\n\n                    {f.type !== 'SIG' && !f.type_comment // there's just one type for signatures, not worth showing this here\n                      && (\n                      <PropItem key=\"type\" title=\"API Type\" Icon={CategoryIcon}>\n                        {f.type}\n                        {' '}\n                        <Comment title={f.type_comment} />\n                      </PropItem>\n                      )}\n\n                    <PropItem key=\"securitynotion\" title=\"Security Notion\" Icon={SecurityIcon}>\n                      <Tooltip title={SEC_NOTIONS[f.security_notion]}>\n                        <span>{f.security_notion}</span>\n                      </Tooltip>\n                      <Comment title={f.security_notion_comment} />\n                    </PropItem>\n\n                    {f.dh_ness && (\n                    <PropItem key=\"dhness\" title=\"Diffie-Hellman-Ness\" Icon={DiffieHellmanIcon}>\n                      <strong>Diffie-Hellman-Ness: </strong>\n                      {f.dh_ness}\n                    </PropItem>\n                    )}\n\n                    <PropItem key=\"paramsets\" title=\"Parameter sets\" Icon={ParamSetIcon}>\n                      {flavorParamsets.map((p) => (\n                        <div key={p.name}>\n                          {p.name}\n                          {' '}\n                          {(p.security_level_nist_category ?? 0) > 0 && (\n\n                            <Tooltip title={`NIST Category ${p.security_level_nist_category}`}>\n                              <span>\n                                (\n                                {romanCat(p.security_level_nist_category)}\n                                )\n                              </span>\n                            </Tooltip>\n                          )}\n                        </div>\n                      ))}\n                    </PropItem>\n\n                    <PropItem key=\"implementations\" title=\"Implementations\" Icon={CodeIcon}>\n                      {flavorImplementations.map((i) => <div key={i.name}>{i.name}</div>)}\n                    </PropItem>\n                  </div>\n                );\n              })}\n            </List>\n          </Box>\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nSchemeDetail.propTypes = propTypes;\n\nexport default SchemeDetail;\n","import React from 'react';\nimport makeSvgIcon from '../utils/makeSvgIcon';\n\nconst ExternalLink = makeSvgIcon(\n  <>\n    <path d=\"M 14 2.5 A 1.5 1.5 0 1 0 14 5.5 L 16.378906 5.5 L 8.9394531 12.939453 A 1.5 1.5 0 1 0 11.060547 15.060547 L 18.5 7.6210938 L 18.5 10 A 1.5 1.5 0 1 0 21.5 10 L 21.5 4 A 1.5 1.5 0 0 0 21.5 3.9902344 A 1.5 1.5 0 0 0 21.494141 3.8789062 A 1.5 1.5 0 0 0 21.492188 3.8496094 A 1.5 1.5 0 0 0 21.490234 3.8417969 A 1.5 1.5 0 0 0 21.482422 3.7851562 A 1.5 1.5 0 0 0 21.480469 3.7695312 A 1.5 1.5 0 0 0 21.464844 3.6796875 A 1.5 1.5 0 0 0 21.427734 3.5410156 A 1.5 1.5 0 0 0 21.425781 3.5351562 A 1.5 1.5 0 0 0 21.337891 3.3261719 A 1.5 1.5 0 0 0 21.308594 3.2695312 A 1.5 1.5 0 0 0 21.304688 3.2617188 A 1.5 1.5 0 0 0 21.300781 3.2578125 A 1.5 1.5 0 0 0 21.279297 3.2207031 A 1.5 1.5 0 0 0 21.224609 3.1347656 A 1.5 1.5 0 0 0 21.132812 3.0175781 A 1.5 1.5 0 0 0 21.044922 2.9238281 A 1.5 1.5 0 0 0 21.029297 2.9082031 A 1.5 1.5 0 0 0 20.994141 2.8789062 A 1.5 1.5 0 0 0 20.984375 2.8710938 A 1.5 1.5 0 0 0 20.914062 2.8105469 A 1.5 1.5 0 0 0 20.912109 2.8085938 A 1.5 1.5 0 0 0 20.810547 2.7382812 A 1.5 1.5 0 0 0 20.791016 2.7265625 A 1.5 1.5 0 0 0 20.789062 2.7265625 A 1.5 1.5 0 0 0 20.783203 2.7226562 A 1.5 1.5 0 0 0 20.765625 2.7109375 A 1.5 1.5 0 0 0 20.664062 2.6542969 A 1.5 1.5 0 0 0 20.660156 2.6523438 A 1.5 1.5 0 0 0 20.542969 2.6015625 A 1.5 1.5 0 0 0 20.525391 2.5957031 A 1.5 1.5 0 0 0 20.521484 2.59375 A 1.5 1.5 0 0 0 20.486328 2.5820312 A 1.5 1.5 0 0 0 20.386719 2.5507812 A 1.5 1.5 0 0 0 20.384766 2.5507812 A 1.5 1.5 0 0 0 20.378906 2.5488281 A 1.5 1.5 0 0 0 20.337891 2.5410156 A 1.5 1.5 0 0 0 20.300781 2.53125 A 1.5 1.5 0 0 0 20.255859 2.5214844 A 1.5 1.5 0 0 0 20.244141 2.5195312 A 1.5 1.5 0 0 0 20.107422 2.5039062 A 1.5 1.5 0 0 0 20.099609 2.5039062 A 1.5 1.5 0 0 0 20 2.5 L 19.955078 2.5 L 14 2.5 z \" />\n    <path d=\"M 5,3 C 3.9092972,3 3,3.9092972 3,5 v 14 c 0,1.090703 0.9092972,2 2,2 h 14 c 1.090703,0 2,-0.909297 2,-2 v -4 h -2 v 4 H 5 V 5 H 9 V 3 Z\" />\n  </>,\n);\n\nexport default ExternalLink;\n","import {\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  NIST_ROUNDS,\n  SCHEME_TYPES,\n} from '../constants';\nimport ExternalLinkIcon from '../icons/ExternalLink';\nimport detailLink from '../utils/detailLink';\nimport queryAll from '../utils/queryAll';\n\nfunction MaybeTooltip({ title, children }) {\n  return (title && title !== '') ? <Tooltip title={title}>{children}</Tooltip> : children;\n}\n\nMaybeTooltip.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nMaybeTooltip.defaultProps = {\n  title: '',\n};\n\nfunction SchemeList(props) {\n  const { typeKey, db } = props;\n  const stmt = 'SELECT * FROM scheme WHERE type=? ORDER BY nist_round DESC, name ASC;';\n  const type = SCHEME_TYPES[typeKey];\n\n  return (\n    <>\n      <Typography component=\"h2\" variant=\"h5\">\n        {type.name}\n        s\n        {'  '}\n        <type.icon fontSize=\"inherit\" style={{ marginBottom: -3 }} />\n      </Typography>\n      <List>\n        {queryAll(db, stmt, [typeKey]).map((s) => (\n          <ListItem key={`${typeKey}-${s.id_text}`} style={{ paddingLeft: 0 }}>\n            <ListItemText>\n              <Typography variant=\"h6\">\n                <Link component={RouterLink} to={detailLink(s.id_text)}>\n                  {s.name}\n                </Link>\n                { s.website && [\n                  ' ',\n                  <Link\n                    href={s.website}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    title=\"Website\"\n                  >\n                    <ExternalLinkIcon style={{ fontSize: '.8em', marginBottom: -2, marginLeft: '.2em' }} />\n                  </Link>,\n                ]}\n              </Typography>\n              <small style={{ lineHeight: 1 }}>\n                <MaybeTooltip title={s.category_comment}>\n                  <span>{s.category}</span>\n                </MaybeTooltip>\n                {s.nist_round !== 'none' && (\n                <>\n                  {' \\u2022 '}\n                  <MaybeTooltip title={s.nist_round_comment}>\n                    <span>{NIST_ROUNDS[s.nist_round].short}</span>\n                  </MaybeTooltip>\n                </>\n                )}\n                {s.description && ' \\u2022 '}\n                <em>{s.description}</em>\n              </small>\n            </ListItemText>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n}\nSchemeList.propTypes = {\n  typeKey: PropTypes.oneOf(['sig', 'enc']).isRequired,\n  db: PropTypes.shape({\n    prepare: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default SchemeList;\n","import {\n  Box,\n  Container,\n  Grid,\n  Paper,\n} from '@mui/material';\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { SCHEME_TYPES } from '../constants';\nimport SchemeList from '../components/SchemeList';\n\nconst propTypes = {\n  db: PropTypes.shape({\n    prepare: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nfunction SchemeOverview(props) {\n  useEffect(() => {\n    document.title = 'Scheme Overview - pqdb';\n  }, []);\n\n  const { db } = props;\n  return (\n    <Container maxWidth=\"md\">\n      <Grid container justify=\"center\" spacing={2}>\n        {Object.keys(SCHEME_TYPES).map((typeKey) => (\n          <Grid key={typeKey} item xs>\n            <Paper>\n              <Box p={2}>\n                <SchemeList db={db} typeKey={typeKey} />\n              </Box>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n\nSchemeOverview.propTypes = propTypes;\n\nexport default SchemeOverview;\n","import { Redirect, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport FlavorDetail from './FlavorDetail';\nimport SchemeDetail from './SchemeDetail';\nimport SchemeOverview from './SchemeOverview';\n\nconst propTypes = {\n  db: PropTypes.shape({\n    prepare: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nfunction SchemeDetailSwitch({ db }) {\n  return (\n    <Switch>\n      <Route exact path=\"/detail\" render={() => <SchemeOverview db={db} />} />\n      <Route\n        exact\n        path=\"/detail/:schemeId\"\n        render={(props) => <SchemeDetail db={db} {...props} />}\n      />\n      <Route\n        exact\n        path=\"/detail/:schemeId/:flavorId\"\n        render={(props) => <FlavorDetail db={db} {...props} />}\n      />\n      <Route render={() => <Redirect to=\"/\" />} />\n    </Switch>\n  );\n}\n\nSchemeDetailSwitch.propTypes = propTypes;\n\nexport default SchemeDetailSwitch;\n","export default __webpack_public_path__ + \"static/media/menu-arrow.91d51d4a.svg\";","import {\n  Box,\n  Container,\n  Grid,\n  Link,\n  Paper,\n  Typography,\n} from '@mui/material';\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SchemeList from '../components/SchemeList';\nimport menuArrow from '../res/menu-arrow.svg';\n\nconst propTypes = {\n  db: PropTypes.shape({\n    prepare: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nfunction Welcome({ db }) {\n  useEffect(() => {\n    document.title = 'Welcome - pqdb';\n  }, []);\n\n  return (\n    <Container maxWidth=\"md\">\n      <img\n        style={{\n          position: 'absolute',\n          left: 15,\n          top: 50,\n          opacity: 0.54,\n          transform: 'scale(.8)',\n          transformOrigin: 'left top',\n        }}\n        src={menuArrow}\n        alt=\"\"\n      />\n\n      <Paper>\n        <Box p={4}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>Welcome!</Typography>\n          <Typography paragraph>\n            This is the frontend presenting data from\n            {' '}\n            <Link href=\"https://github.com/cryptoeng/pqdb/\">https://github.com/cryptoeng/pqdb/</Link>\n            . You can select different views by clicking the menu icon in the top left corner.\n          </Typography>\n          <Typography paragraph>\n            The page is written in\n            {' '}\n            <Link href=\"https://reactjs.org/\">React</Link>\n            {' '}\n            and operates purely client site by loading an\n            {' '}\n            <Link href=\"https://www.sqlite.org/\">SQLite</Link>\n            {' '}\n            database (located\n            {' '}\n            <Link href=\"pqdb.sqlite\">here</Link>\n            ) which is generated from the data in pqdb.\n          </Typography>\n          <Typography paragraph>\n            Contributions are warmly welcomed, see\n            {' '}\n            <Link href=\"https://github.com/cryptoeng/pqdb#contribute\">here</Link>\n            {' '}\n            for details.\n          </Typography>\n\n          <Typography variant=\"h4\" component=\"h1\" align=\"center\" pt={2}>Available Schemes</Typography>\n          <Grid container>\n            <Grid item xs key=\"enc\">\n              <Box p={4}>\n                <SchemeList db={db} typeKey=\"enc\" />\n              </Box>\n            </Grid>\n            <Grid item xs key=\"sig\">\n              <Box p={4}>\n                <SchemeList db={db} typeKey=\"sig\" />\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Container>\n  );\n}\n\nWelcome.propTypes = propTypes;\n\nexport default Welcome;\n","export default __webpack_public_path__ + \"static/media/pqdb.03d23b89.svg\";","import {\n  Box,\n  CircularProgress,\n  Container, CssBaseline,\n  Drawer,\n  Grid,\n  IconButton,\n\n  Paper,\n  Tooltip,\n} from '@mui/material';\nimport {\n  Brightness4 as DarkIcon,\n  BrightnessHigh as LightIcon,\n  Menu as MenuIcon,\n} from '@mui/icons-material';\nimport {\n  Link, Redirect, Route, Switch,\n} from 'react-router-dom';\nimport { StyledEngineProvider, ThemeProvider, createTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport initSqlJs from 'sql.js';\n\nimport CustomSQLQuery from './views/CustomSQLQuery';\nimport DrawerList from './components/DrawerList';\nimport SchemeComparison from './views/SchemeComparison';\nimport SchemeDetailSwitch from './views/SchemeDetailSwitch';\nimport Welcome from './views/Welcome';\nimport logo from './pqdb.svg';\n\nconst defaultTheme = createTheme();\nfunction getTheme(type) {\n  return createTheme({\n    components: {\n      MuiToggleButton: {\n        styleOverrides: {\n          root: {\n            '&.Mui-disabled': {\n              color: defaultTheme.palette.action.disabled,\n            },\n          },\n        },\n      },\n    },\n    palette: {\n      mode: type,\n    },\n  });\n}\n\nconst pathname = (key) => `/${key}`;\n\n// Add new views here\nconst views = {\n  '': {\n    name: 'Welcome Page',\n    description: 'Contains info about this website.',\n    view: Welcome,\n  },\n  raw_sql: {\n    name: 'Custom SQL Query',\n    description: 'Enter a custom database query and display the result in a table.',\n    view: CustomSQLQuery,\n  },\n  detail: {\n    name: 'Scheme Details',\n    description: 'Browse data stored for a scheme',\n    routing: true,\n    view: SchemeDetailSwitch,\n  },\n  comparison: {\n    name: 'Scheme Comparison',\n    description: 'Compare schemes based on memory requirements and performance.',\n    view: SchemeComparison,\n  },\n};\n\nfunction Progress() {\n  return <Box display=\"flex\" justifyContent=\"center\"><CircularProgress /></Box>;\n}\n\nconst propTypes = {\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n    location: PropTypes.shape({\n      search: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      themeId: 'light',\n      db: null,\n      drawerOpen: false,\n    };\n    this.unlisten = null;\n  }\n\n  componentDidMount() {\n    // sql.js needs to fetch its wasm file, so we cannot immediately instantiate the database\n    // without any configuration, initSqlJs will fetch the wasm files directly from the same\n    // path as the js see ../config-overrides.js\n    initSqlJs()\n      .then((SQL) => this.loadDatabase(SQL))\n      .catch((err) => this.setState({ error: err }));\n\n    const { history } = this.props;\n\n    this.unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n    const { db } = this.state;\n    db.close();\n  }\n\n  loadDatabase(SQL) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', '/pqdb/pqdb.sqlite', true);\n    xhr.responseType = 'arraybuffer';\n\n    xhr.onload = () => {\n      const uInt8Array = new Uint8Array(xhr.response);\n      this.setState({ db: new SQL.Database(uInt8Array) });\n    };\n    xhr.send();\n  }\n\n  switchView(view) {\n    const { history } = this.props;\n    history.push({\n      pathname: pathname(view),\n    });\n    this.setState({ drawerOpen: false });\n  }\n\n  toggleTheme() {\n    const { themeId } = this.state;\n    this.setState({ themeId: (themeId === 'light') ? 'dark' : 'light' });\n  }\n\n  render() {\n    const { history } = this.props;\n    const {\n      db, error, drawerOpen, themeId,\n    } = this.state;\n    let content;\n    if (db) {\n      content = (\n        <Grid container item>\n          <Switch>\n            {\n              Object.keys(views).map((key) => (\n                <Route\n                  key={key}\n                  exact={!Object.prototype.hasOwnProperty.call(views[key], 'routing')}\n                  path={pathname(key)}\n                  render={\n                    (props) => React.createElement(views[key].view, {\n                      key: `${key}?${history.location.search}`, db, ...props,\n                    })\n                  }\n                />\n              ))\n            }\n            <Route render={() => <Redirect to=\"/\" />} />\n          </Switch>\n        </Grid>\n      );\n    } else if (error) {\n      content = 'There was an error while loading the database.';\n    } else {\n      content = <Progress />;\n    }\n    return (\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={getTheme(themeId)}>\n          <CssBaseline />\n          <Box p={2}>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <Box display=\"flex\" justifyContent=\"center\">\n                  <Link to=\"/\">\n                    <img src={logo} width=\"500em\" height=\"192.5em\" alt=\"Logo\" />\n                  </Link>\n                </Box>\n              </Grid>\n              {content}\n              <Grid item>\n                <Container maxWidth=\"lg\">\n                  <Paper>\n                    <Box p={1} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                      <Tooltip title={`Switch to ${(themeId === 'light') ? 'dark' : 'light'} theme`}>\n                        <IconButton onClick={() => this.toggleTheme()} size=\"large\">\n                          {(themeId === 'light') ? <DarkIcon /> : <LightIcon />}\n                        </IconButton>\n                      </Tooltip>\n                    </Box>\n                  </Paper>\n                </Container>\n              </Grid>\n            </Grid>\n            <IconButton\n              style={{ position: 'absolute', top: 0, left: 0 }}\n              onClick={() => this.setState({ drawerOpen: true })}\n              size=\"large\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </Box>\n          <Drawer anchor=\"left\" open={drawerOpen} onClose={() => this.setState({ drawerOpen: false })}>\n            <DrawerList onClick={(view) => this.switchView(view)} views={views} />\n          </Drawer>\n        </ThemeProvider>\n      </StyledEngineProvider>\n    );\n  }\n}\n\nApp.propTypes = propTypes;\n\nexport default App;\n","import { BrowserRouter as Router, withRouter } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconst AppWithRouter = withRouter(App);\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/pqdb\">\n      <AppWithRouter />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}